{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dappTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        }
      ],
      "name": "addAllowedNfts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedNfts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowerIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getNftLockData",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getNftValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getOffers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "getUserSingleNftValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interestDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isBorrowers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_loanTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_repayAmount",
          "type": "uint256"
        }
      ],
      "name": "loanRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_loanTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftHolderAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_loanAmount",
          "type": "uint256"
        }
      ],
      "name": "loanTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        }
      ],
      "name": "nftIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLoanAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLoanExpireTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLoanHolderAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLoanInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLoanPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLoanRepayAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_holderAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expireTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_repayAmount",
          "type": "uint256"
        }
      ],
      "name": "nftLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nftPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "nftStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "nftUnStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numOfNftStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanInterest",
          "type": "uint256"
        }
      ],
      "name": "setOffers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakedNftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakedNftId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakedNftIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
    "1": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC721/IERC721.sol",
    "3": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Context.sol",
    "4": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/introspection/IERC165.sol",
    "5": "/Users/apple/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.5.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "6": "contracts/Escrow.sol"
  },
  "ast": {
    "absolutePath": "contracts/Escrow.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1227
      ],
      "Context": [
        1249
      ],
      "Escrow": [
        874
      ],
      "IERC165": [
        1261
      ],
      "IERC20": [
        1065
      ],
      "IERC721": [
        1181
      ],
      "Ownable": [
        987
      ]
    },
    "id": 875,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "931:23:6"
      },
      {
        "absolutePath": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 875,
        "sourceUnit": 988,
        "src": "956:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 875,
        "sourceUnit": 1182,
        "src": "1009:58:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/apple/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 875,
        "sourceUnit": 1066,
        "src": "1068:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/apple/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.5.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 875,
        "sourceUnit": 1228,
        "src": "1125:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nameLocations": [
                "1222:7:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 987,
              "src": "1222:7:6"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "1222:7:6"
          }
        ],
        "canonicalName": "Escrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 874,
        "linearizedBaseContracts": [
          874,
          987,
          1249
        ],
        "name": "Escrow",
        "nameLocation": "1212:6:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4d23d8af",
            "id": 10,
            "mutability": "mutable",
            "name": "allowedNfts",
            "nameLocation": "1253:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1236:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1236:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9,
              "nodeType": "ArrayTypeName",
              "src": "1236:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3eaf005",
            "id": 14,
            "mutability": "mutable",
            "name": "nftPriceFeedMapping",
            "nameLocation": "1305:19:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1270:54:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 13,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1278:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1270:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1289:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "lender",
            "nameLocation": "1367:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1359:14:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "inspector",
            "nameLocation": "1387:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1379:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1379:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5eb186f8",
            "id": 21,
            "mutability": "mutable",
            "name": "dappToken",
            "nameLocation": "1417:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1403:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1065",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC20",
                "nameLocations": [
                  "1403:6:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1065,
                "src": "1403:6:6"
              },
              "referencedDeclaration": 1065,
              "src": "1403:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1065",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Escrow.loanOffer",
            "id": 28,
            "members": [
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "_loanAmount",
                "nameLocation": "1534:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "1526:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1526:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "_loanDays",
                "nameLocation": "1591:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "1583:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1583:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "_loanInterest",
                "nameLocation": "1629:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "1621:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1621:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "loanOffer",
            "nameLocation": "1440:9:6",
            "nodeType": "StructDefinition",
            "scope": 874,
            "src": "1433:264:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "567d1ebf",
            "id": 31,
            "mutability": "mutable",
            "name": "interestDecimals",
            "nameLocation": "1717:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1702:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1702:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1736:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9f42ce02",
            "id": 37,
            "mutability": "mutable",
            "name": "stakedNftAddress",
            "nameLocation": "1884:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1829:71:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(address => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1837:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1829:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(address => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 35,
                "keyType": {
                  "id": 33,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1856:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1848:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1867:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aeb4e4a4",
            "id": 43,
            "mutability": "mutable",
            "name": "stakedNftId",
            "nameLocation": "1961:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "1906:66:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 42,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1914:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1906:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 41,
                "keyType": {
                  "id": 39,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1933:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1925:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1944:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "79d2fde4",
            "id": 51,
            "mutability": "mutable",
            "name": "stakedNftIndex",
            "nameLocation": "2134:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2051:97:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2059:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2051:67:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
              },
              "valueType": {
                "id": 49,
                "keyType": {
                  "id": 45,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2078:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2070:47:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                },
                "valueType": {
                  "id": 48,
                  "keyType": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2089:27:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueType": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1316263a",
            "id": 55,
            "mutability": "mutable",
            "name": "numOfNftStaked",
            "nameLocation": "2189:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2154:49:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2162:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2154:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 53,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2173:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7924d93f",
            "id": 58,
            "mutability": "mutable",
            "name": "borrowers",
            "nameLocation": "2226:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2209:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 56,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2209:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 57,
              "nodeType": "ArrayTypeName",
              "src": "2209:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b026e6bd",
            "id": 62,
            "mutability": "mutable",
            "name": "borrowerIndex",
            "nameLocation": "2276:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2241:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2249:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2241:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2260:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d1ab89c",
            "id": 68,
            "mutability": "mutable",
            "name": "nftLoanRepayAmount",
            "nameLocation": "2432:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2377:73:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2385:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2377:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 66,
                "keyType": {
                  "id": 64,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2404:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2396:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 65,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2415:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e9e9790",
            "id": 74,
            "mutability": "mutable",
            "name": "nftLoanExpireTime",
            "nameLocation": "2511:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2456:72:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2464:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2456:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 72,
                "keyType": {
                  "id": 70,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2483:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2475:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 71,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2494:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ef4c7ad",
            "id": 80,
            "mutability": "mutable",
            "name": "nftLoanHolderAddress",
            "nameLocation": "2589:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2534:75:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(address => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 79,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2542:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2534:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(address => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 78,
                "keyType": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2561:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2553:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 77,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2572:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bd4a267",
            "id": 86,
            "mutability": "mutable",
            "name": "nftLoanAmount",
            "nameLocation": "2750:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2695:68:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2703:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2695:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 84,
                "keyType": {
                  "id": 82,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2722:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2714:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 83,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2733:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44589e6e",
            "id": 92,
            "mutability": "mutable",
            "name": "nftLoanPeriod",
            "nameLocation": "2837:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2782:68:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 91,
              "keyType": {
                "id": 87,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2790:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2782:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 90,
                "keyType": {
                  "id": 88,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2809:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2801:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 89,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2820:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dcfd51c3",
            "id": 98,
            "mutability": "mutable",
            "name": "nftLoanInterest",
            "nameLocation": "2925:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 874,
            "src": "2870:70:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 97,
              "keyType": {
                "id": 93,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2878:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2870:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 96,
                "keyType": {
                  "id": 94,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2897:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2889:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 95,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2908:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "3008:54:6",
              "statements": [
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3018:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1065",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105,
                          "name": "_dappTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "3037:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 104,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "3030:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1065_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3030:25:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1065",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3018:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1065",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:37:6"
                }
              ]
            },
            "id": 110,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_dappTokenAddress",
                  "nameLocation": "2982:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2974:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2973:27:6"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3008:0:6"
            },
            "scope": 874,
            "src": "2962:100:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "3143:204:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3267:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3271:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3267:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 125,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3299:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Escrow_$874",
                              "typeString": "contract Escrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Escrow_$874",
                              "typeString": "contract Escrow"
                            }
                          ],
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3291:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 123,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3291:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3291:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 127,
                        "name": "_repayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "3318:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 118,
                            "name": "_loanTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "3222:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 117,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "3215:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1065_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3215:25:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1065",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3241:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1064,
                      "src": "3215:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3215:125:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "3215:125:6"
                }
              ]
            },
            "functionSelector": "466b3362",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "loanRepay",
            "nameLocation": "3077:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_loanTokenAddress",
                  "nameLocation": "3095:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3087:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_repayAmount",
                  "nameLocation": "3122:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3114:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3114:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3086:49:6"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3143:0:6"
            },
            "scope": 874,
            "src": "3068:279:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "3497:126:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "_nftHolderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "3585:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 147,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "3604:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 143,
                            "name": "_loanTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3557:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 142,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "3550:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1065_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3550:25:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1065",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3576:8:6",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1032,
                      "src": "3550:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3550:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "3550:66:6"
                }
              ]
            },
            "functionSelector": "512a53bc",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 139,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3487:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 906,
                  "src": "3487:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3487:9:6"
              }
            ],
            "name": "loanTransfer",
            "nameLocation": "3362:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_loanTokenAddress",
                  "nameLocation": "3392:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "3384:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_nftHolderAddress",
                  "nameLocation": "3427:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "3419:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_loanAmount",
                  "nameLocation": "3462:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "3454:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:105:6"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3497:0:6"
            },
            "scope": 874,
            "src": "3353:270:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "3725:1087:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 162,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "3890:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 161,
                          "name": "nftIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "3877:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3877:25:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e74206e6674206973206e6f7420616c6c6f77656420696e206f75722077686974656c69737421",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3916:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41635d4a064b45cccb2f180734bebcb6aa8647301be4ebe7d620d72cdd9aa308",
                          "typeString": "literal_string \"current nft is not allowed in our whitelist!\""
                        },
                        "value": "current nft is not allowed in our whitelist!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41635d4a064b45cccb2f180734bebcb6aa8647301be4ebe7d620d72cdd9aa308",
                          "typeString": "literal_string \"current nft is not allowed in our whitelist!\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3856:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:116:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "3856:116:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 173,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4025:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Escrow_$874",
                              "typeString": "contract Escrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Escrow_$874",
                              "typeString": "contract Escrow"
                            }
                          ],
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4017:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4017:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4017:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4032:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4036:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4032:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 177,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "4044:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 168,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "3991:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 167,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1181,
                          "src": "3983:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1181_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3983:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1181",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4004:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1146,
                      "src": "3983:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3983:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3983:68:6"
                },
                {
                  "assignments": [
                    181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 181,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4069:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "4061:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 180,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4061:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 182,
                          "name": "stakedNftIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "4077:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                            "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                          }
                        },
                        "id": 185,
                        "indexExpression": {
                          "expression": {
                            "id": 183,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4092:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4096:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4092:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4077:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 187,
                      "indexExpression": {
                        "id": 186,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "4104:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4077:39:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "id": 188,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "4117:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4077:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4061:63:6"
                },
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "nft_address",
                      "nameLocation": "4142:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "4134:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4134:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 193,
                        "name": "stakedNftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4156:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(uint256 => address))"
                        }
                      },
                      "id": 196,
                      "indexExpression": {
                        "expression": {
                          "id": 194,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4173:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4177:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4173:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4156:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 197,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4198:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "expression": {
                          "id": 198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4213:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4217:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4213:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4198:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4156:78:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4134:100:6"
                },
                {
                  "assignments": [
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "nft_id",
                      "nameLocation": "4252:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "4244:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4244:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 214,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 205,
                        "name": "stakedNftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "4261:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 208,
                      "indexExpression": {
                        "expression": {
                          "id": 206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4273:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4277:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4273:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4261:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 213,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 209,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4285:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 212,
                      "indexExpression": {
                        "expression": {
                          "id": 210,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4300:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4304:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4300:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4285:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4261:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4244:68:6"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 215,
                          "name": "stakedNftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "4322:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(uint256 => address))"
                          }
                        },
                        "id": 219,
                        "indexExpression": {
                          "expression": {
                            "id": 216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4339:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4343:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4339:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4322:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "id": 218,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "4351:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4322:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 221,
                      "name": "nft_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "4360:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4322:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:49:6"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 224,
                          "name": "stakedNftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "4381:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "expression": {
                            "id": 225,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4393:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4397:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4393:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4381:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "id": 227,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "4405:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4381:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 230,
                      "name": "nft_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "4414:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4381:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:39:6"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 233,
                            "name": "stakedNftIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "4430:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "expression": {
                              "id": 234,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4445:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4449:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4445:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4430:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 239,
                        "indexExpression": {
                          "id": 236,
                          "name": "nft_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "4457:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4430:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 240,
                      "indexExpression": {
                        "id": 237,
                        "name": "nft_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "4470:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4430:47:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 241,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "4480:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4430:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "4430:55:6"
                },
                {
                  "expression": {
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 244,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4495:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 247,
                      "indexExpression": {
                        "expression": {
                          "id": 245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4510:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4514:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4510:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4495:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 248,
                          "name": "numOfNftStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4524:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 251,
                        "indexExpression": {
                          "expression": {
                            "id": 249,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4539:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4543:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4539:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4524:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4553:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4524:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4495:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "4495:59:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 256,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4569:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 259,
                      "indexExpression": {
                        "expression": {
                          "id": 257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4584:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4588:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4584:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4569:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4599:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4569:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 294,
                  "nodeType": "IfStatement",
                  "src": "4565:241:6",
                  "trueBody": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "4602:204:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 262,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "4616:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 263,
                              "name": "borrowerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "4624:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 266,
                            "indexExpression": {
                              "expression": {
                                "id": 264,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4638:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4642:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4638:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4624:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4616:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "4616:33:6"
                      },
                      {
                        "expression": {
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 269,
                              "name": "borrowers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "4663:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 271,
                            "indexExpression": {
                              "id": 270,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "4673:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4663:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 272,
                              "name": "borrowers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "4682:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 277,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 273,
                                  "name": "borrowers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58,
                                  "src": "4692:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4702:6:6",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4692:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4711:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4692:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4682:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4663:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 279,
                        "nodeType": "ExpressionStatement",
                        "src": "4663:50:6"
                      },
                      {
                        "expression": {
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 280,
                              "name": "borrowerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "4727:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 284,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 281,
                                "name": "borrowers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "4741:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 283,
                              "indexExpression": {
                                "id": 282,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 181,
                                "src": "4751:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4741:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4727:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 285,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "4761:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4727:39:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "4727:39:6"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 288,
                              "name": "borrowers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "4780:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4790:3:6",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "4780:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4780:15:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 292,
                        "nodeType": "ExpressionStatement",
                        "src": "4780:15:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "bbb62028",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 157,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3711:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 906,
                  "src": "3711:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3711:9:6"
              }
            ],
            "name": "nftUnStaking",
            "nameLocation": "3638:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "3659:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "3651:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3651:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "3680:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "3672:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3672:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3650:37:6"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3725:0:6"
            },
            "scope": 874,
            "src": "3629:1183:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "4882:733:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 305,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "4962:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 304,
                          "name": "nftIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "4949:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4949:25:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e74206e6674206973206e6f7420616c6c6f77656420696e206f75722077686974656c69737421",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4988:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41635d4a064b45cccb2f180734bebcb6aa8647301be4ebe7d620d72cdd9aa308",
                          "typeString": "literal_string \"current nft is not allowed in our whitelist!\""
                        },
                        "value": "current nft is not allowed in our whitelist!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41635d4a064b45cccb2f180734bebcb6aa8647301be4ebe7d620d72cdd9aa308",
                          "typeString": "literal_string \"current nft is not allowed in our whitelist!\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4928:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4928:116:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "4928:116:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5088:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5092:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5088:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 318,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5108:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Escrow_$874",
                              "typeString": "contract Escrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Escrow_$874",
                              "typeString": "contract Escrow"
                            }
                          ],
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5100:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 316,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5100:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5100:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 320,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "5115:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 311,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "5062:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 310,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1181,
                          "src": "5054:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1181_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5054:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1181",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5075:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1146,
                      "src": "5054:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5054:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "5054:68:6"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 323,
                          "name": "stakedNftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "5132:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(uint256 => address))"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "expression": {
                            "id": 324,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5149:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5153:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5149:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5132:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 331,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 326,
                          "name": "numOfNftStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "5161:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 329,
                        "indexExpression": {
                          "expression": {
                            "id": 327,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5176:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5180:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5176:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5161:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5132:56:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 332,
                      "name": "_nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "5191:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5132:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:70:6"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 335,
                          "name": "stakedNftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "5212:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 342,
                        "indexExpression": {
                          "expression": {
                            "id": 336,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5224:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5228:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5224:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5212:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 343,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 338,
                          "name": "numOfNftStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "5236:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 341,
                        "indexExpression": {
                          "expression": {
                            "id": 339,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5251:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5255:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5251:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5236:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5212:51:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "5266:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5212:60:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "5212:60:6"
                },
                {
                  "expression": {
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 347,
                            "name": "stakedNftIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5282:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 352,
                          "indexExpression": {
                            "expression": {
                              "id": 348,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5297:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5301:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5297:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5282:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 353,
                        "indexExpression": {
                          "id": 350,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "5309:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5282:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 354,
                      "indexExpression": {
                        "id": 351,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "5322:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5282:47:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 355,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "5332:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 358,
                      "indexExpression": {
                        "expression": {
                          "id": 356,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5360:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5364:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5360:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5332:48:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5282:98:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:98:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 361,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "5394:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 364,
                      "indexExpression": {
                        "expression": {
                          "id": 362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5409:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5413:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5409:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5394:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5424:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5394:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 385,
                  "nodeType": "IfStatement",
                  "src": "5390:150:6",
                  "trueBody": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "5427:113:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 370,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5456:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5460:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5456:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 367,
                              "name": "borrowers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "5441:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5451:4:6",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5441:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5441:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 373,
                        "nodeType": "ExpressionStatement",
                        "src": "5441:26:6"
                      },
                      {
                        "expression": {
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 374,
                              "name": "borrowerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "5481:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 377,
                            "indexExpression": {
                              "expression": {
                                "id": 375,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5495:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5499:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5495:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5481:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 378,
                                "name": "borrowers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "5509:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5519:6:6",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5509:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5528:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5509:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5481:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 383,
                        "nodeType": "ExpressionStatement",
                        "src": "5481:48:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 386,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "5549:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 389,
                      "indexExpression": {
                        "expression": {
                          "id": 387,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5564:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5568:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5564:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5549:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 390,
                          "name": "numOfNftStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "5578:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 393,
                        "indexExpression": {
                          "expression": {
                            "id": 391,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5593:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5597:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5593:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5578:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5607:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5578:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5549:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "5549:59:6"
                }
              ]
            },
            "functionSelector": "bfeecc51",
            "id": 399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nftStaking",
            "nameLocation": "4827:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "4846:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "4838:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4838:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "4867:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "4859:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4837:37:6"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4882:0:6"
            },
            "scope": 874,
            "src": "4818:797:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "5805:185:6",
              "statements": [
                {
                  "expression": {
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 414,
                          "name": "nftLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "5815:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 417,
                        "indexExpression": {
                          "id": 415,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "5829:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5815:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 418,
                      "indexExpression": {
                        "id": 416,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "5842:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5815:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 419,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "5852:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5815:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "5815:48:6"
                },
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 422,
                          "name": "nftLoanInterest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "5873:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 425,
                        "indexExpression": {
                          "id": 423,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "5889:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5873:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 426,
                      "indexExpression": {
                        "id": 424,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "5902:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5873:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 427,
                      "name": "_loanInterest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "5912:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5873:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5873:52:6"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 430,
                          "name": "nftLoanPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "5935:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 433,
                        "indexExpression": {
                          "id": 431,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 401,
                          "src": "5949:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5935:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 434,
                      "indexExpression": {
                        "id": 432,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "5962:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5935:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 435,
                      "name": "_loanPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "5972:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5935:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "5935:48:6"
                }
              ]
            },
            "functionSelector": "f8dede7c",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 412,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 411,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5795:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 906,
                  "src": "5795:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5795:9:6"
              }
            ],
            "name": "setOffers",
            "nameLocation": "5630:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "5657:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5649:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5649:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "5686:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5678:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5678:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_loanAmount",
                  "nameLocation": "5710:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5702:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "_loanPeriod",
                  "nameLocation": "5739:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5731:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5731:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "_loanInterest",
                  "nameLocation": "5768:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5760:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5760:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:148:6"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5805:0:6"
            },
            "scope": 874,
            "src": "5621:369:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "6174:267:6",
              "statements": [
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "loan_amount",
                      "nameLocation": "6192:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "6184:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6184:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 459,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 454,
                        "name": "nftLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "6206:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 456,
                      "indexExpression": {
                        "id": 455,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "6220:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6206:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 458,
                    "indexExpression": {
                      "id": 457,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "6233:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6206:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6184:56:6"
                },
                {
                  "assignments": [
                    461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 461,
                      "mutability": "mutable",
                      "name": "loan_interest",
                      "nameLocation": "6258:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "6250:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6250:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 467,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 462,
                        "name": "nftLoanInterest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "6274:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 464,
                      "indexExpression": {
                        "id": 463,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "6290:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6274:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 466,
                    "indexExpression": {
                      "id": 465,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "6303:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6274:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6250:60:6"
                },
                {
                  "assignments": [
                    469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "loan_period",
                      "nameLocation": "6328:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "6320:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6320:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 475,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 470,
                        "name": "nftLoanPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "6342:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 472,
                      "indexExpression": {
                        "id": 471,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "6356:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6342:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 474,
                    "indexExpression": {
                      "id": 473,
                      "name": "_nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "6369:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6342:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6320:56:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 476,
                        "name": "loan_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "6394:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 477,
                        "name": "loan_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "6407:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 478,
                        "name": "loan_interest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "6420:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 479,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6393:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 451,
                  "id": 480,
                  "nodeType": "Return",
                  "src": "6386:48:6"
                }
              ]
            },
            "functionSelector": "ea98a950",
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOffers",
            "nameLocation": "6005:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "6023:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "6015:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6015:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "6044:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "6036:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6036:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6014:37:6"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "6110:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6110:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "6131:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6131:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "6152:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6152:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6096:73:6"
            },
            "scope": 874,
            "src": "5996:445:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "6631:268:6",
              "statements": [
                {
                  "expression": {
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 497,
                          "name": "nftLoanHolderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "6708:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(uint256 => address))"
                          }
                        },
                        "id": 500,
                        "indexExpression": {
                          "id": 498,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 484,
                          "src": "6729:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6708:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 501,
                      "indexExpression": {
                        "id": 499,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "6742:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6708:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 502,
                      "name": "_holderAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "6752:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6708:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "6708:58:6"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 505,
                          "name": "nftLoanExpireTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "6776:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 508,
                        "indexExpression": {
                          "id": 506,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 484,
                          "src": "6794:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6776:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 509,
                      "indexExpression": {
                        "id": 507,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "6807:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6776:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 510,
                      "name": "_expireTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "6817:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6776:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "6776:52:6"
                },
                {
                  "expression": {
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 513,
                          "name": "nftLoanRepayAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "6838:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 516,
                        "indexExpression": {
                          "id": 514,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 484,
                          "src": "6857:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6838:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 517,
                      "indexExpression": {
                        "id": 515,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "6870:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6838:39:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 518,
                      "name": "_repayAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "6880:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6838:54:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "6838:54:6"
                }
              ]
            },
            "functionSelector": "ae422b53",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 494,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6621:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 906,
                  "src": "6621:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6621:9:6"
              }
            ],
            "name": "nftLock",
            "nameLocation": "6456:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "6481:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "6473:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6473:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "6510:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "6502:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6502:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_holderAddress",
                  "nameLocation": "6534:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "6526:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6526:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "_expireTime",
                  "nameLocation": "6566:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "6558:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "_repayAmount",
                  "nameLocation": "6595:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "6587:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6587:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6463:150:6"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6631:0:6"
            },
            "scope": 874,
            "src": "6447:452:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "7088:194:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 535,
                            "name": "nftLoanHolderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "7119:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                              "typeString": "mapping(address => mapping(uint256 => address))"
                            }
                          },
                          "id": 537,
                          "indexExpression": {
                            "id": 536,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "7140:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7119:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 539,
                        "indexExpression": {
                          "id": 538,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "7153:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7119:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 540,
                            "name": "nftLoanExpireTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "7174:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 542,
                          "indexExpression": {
                            "id": 541,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "7192:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7174:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 544,
                        "indexExpression": {
                          "id": 543,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "7205:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7174:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 545,
                            "name": "nftLoanRepayAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "7226:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 547,
                          "indexExpression": {
                            "id": 546,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "7245:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7226:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 549,
                        "indexExpression": {
                          "id": 548,
                          "name": "_nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "7258:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7226:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 550,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7105:170:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 534,
                  "id": 551,
                  "nodeType": "Return",
                  "src": "7098:177:6"
                }
              ]
            },
            "functionSelector": "2cdb786a",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftLockData",
            "nameLocation": "6914:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "6937:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "6929:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6929:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "6958:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "6950:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6928:37:6"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7024:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7024:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7045:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7045:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "7066:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7066:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7010:73:6"
            },
            "scope": 874,
            "src": "6905:377:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 566,
              "nodeType": "Block",
              "src": "7350:46:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 563,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "7377:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 560,
                        "name": "allowedNfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "7360:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7372:4:6",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7360:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7360:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "7360:29:6"
                }
              ]
            },
            "functionSelector": "6c59eb3b",
            "id": 567,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 558,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 557,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7340:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 906,
                  "src": "7340:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7340:9:6"
              }
            ],
            "name": "addAllowedNfts",
            "nameLocation": "7297:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "7320:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "7312:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7312:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7311:21:6"
            },
            "returnParameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7350:0:6"
            },
            "scope": 874,
            "src": "7288:108:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "7472:296:6",
              "statements": [
                {
                  "body": {
                    "id": 594,
                    "nodeType": "Block",
                    "src": "7622:118:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 585,
                              "name": "allowedNfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "7640:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 587,
                            "indexExpression": {
                              "id": 586,
                              "name": "allowedNftsIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "7652:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7640:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 588,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 569,
                            "src": "7673:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7640:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 593,
                        "nodeType": "IfStatement",
                        "src": "7636:94:6",
                        "trueBody": {
                          "id": 592,
                          "nodeType": "Block",
                          "src": "7686:44:6",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7711:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 573,
                              "id": 591,
                              "nodeType": "Return",
                              "src": "7704:11:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 578,
                      "name": "allowedNftsIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "7542:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 579,
                        "name": "allowedNfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "7561:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7573:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7561:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7542:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 595,
                  "initializationExpression": {
                    "assignments": [
                      575
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "allowedNftsIndex",
                        "nameLocation": "7508:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "7500:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7500:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 577,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7527:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7500:28:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7593:18:6",
                      "subExpression": {
                        "id": 582,
                        "name": "allowedNftsIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "7593:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 584,
                    "nodeType": "ExpressionStatement",
                    "src": "7593:18:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "7482:258:6"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7756:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 573,
                  "id": 597,
                  "nodeType": "Return",
                  "src": "7749:12:6"
                }
              ]
            },
            "functionSelector": "8ddefa36",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nftIsAllowed",
            "nameLocation": "7411:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "7432:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "7424:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7424:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7423:21:6"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "7466:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7466:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7465:6:6"
            },
            "scope": 874,
            "src": "7402:366:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "7837:198:6",
              "statements": [
                {
                  "body": {
                    "id": 626,
                    "nodeType": "Block",
                    "src": "7908:99:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 617,
                              "name": "borrowers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "7926:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 619,
                            "indexExpression": {
                              "id": 618,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "7936:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7926:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 620,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "7946:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7926:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 625,
                        "nodeType": "IfStatement",
                        "src": "7922:75:6",
                        "trueBody": {
                          "id": 624,
                          "nodeType": "Block",
                          "src": "7953:44:6",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7978:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 605,
                              "id": 623,
                              "nodeType": "Return",
                              "src": "7971:11:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 610,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "7871:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 611,
                        "name": "allowedNfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "7879:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7891:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7879:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7871:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 627,
                  "initializationExpression": {
                    "assignments": [
                      607
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "7860:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "7852:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7852:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 609,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7868:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7852:17:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7899:7:6",
                      "subExpression": {
                        "id": 614,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "7899:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 616,
                    "nodeType": "ExpressionStatement",
                    "src": "7899:7:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "7847:160:6"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8023:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 605,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "8016:12:6"
                }
              ]
            },
            "functionSelector": "0e32a0e3",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBorrowers",
            "nameLocation": "7783:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "7803:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7795:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7795:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7794:15:6"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7831:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7831:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7830:6:6"
            },
            "scope": 874,
            "src": "7774:261:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 642,
              "nodeType": "Block",
              "src": "8065:98:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 635,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8095:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8099:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8095:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 634,
                          "name": "isBorrowers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "8083:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8083:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626f72726f7765722063616e2063616c6c2074686973206d6574686f64",
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8108:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d9c56d86a229bc1fad1beb63fee54c6299615db29cb457c6ab9f26cfed4c000",
                          "typeString": "literal_string \"Only borrower can call this method\""
                        },
                        "value": "Only borrower can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d9c56d86a229bc1fad1beb63fee54c6299615db29cb457c6ab9f26cfed4c000",
                          "typeString": "literal_string \"Only borrower can call this method\""
                        }
                      ],
                      "id": 633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8075:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8075:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "8075:70:6"
                },
                {
                  "id": 641,
                  "nodeType": "PlaceholderStatement",
                  "src": "8155:1:6"
                }
              ]
            },
            "id": 643,
            "name": "onlyBorrower",
            "nameLocation": "8050:12:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8062:2:6"
            },
            "src": "8041:122:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "8191:93:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 646,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8209:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8213:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8209:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 648,
                          "name": "lender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "8223:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8209:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206c656e6465722063616e2063616c6c2074686973206d6574686f64",
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8231:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6c12de09a2477a3a6c62932b33b16711038ceb465d060b5e86d5c12940ce842",
                          "typeString": "literal_string \"Only lender can call this method\""
                        },
                        "value": "Only lender can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6c12de09a2477a3a6c62932b33b16711038ceb465d060b5e86d5c12940ce842",
                          "typeString": "literal_string \"Only lender can call this method\""
                        }
                      ],
                      "id": 645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8201:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8201:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "8201:65:6"
                },
                {
                  "id": 653,
                  "nodeType": "PlaceholderStatement",
                  "src": "8276:1:6"
                }
              ]
            },
            "id": 655,
            "name": "onlyLender",
            "nameLocation": "8178:10:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8188:2:6"
            },
            "src": "8169:115:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "8315:99:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 658,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8333:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8337:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8333:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 660,
                          "name": "inspector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "8347:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8333:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920696e73706563746f722063616e2063616c6c2074686973206d6574686f64",
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8358:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_991a952771559d979358703300019c5e832ba358f75eaddc0fad384b12dab84f",
                          "typeString": "literal_string \"Only inspector can call this method\""
                        },
                        "value": "Only inspector can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_991a952771559d979358703300019c5e832ba358f75eaddc0fad384b12dab84f",
                          "typeString": "literal_string \"Only inspector can call this method\""
                        }
                      ],
                      "id": 657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8325:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8325:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "8325:71:6"
                },
                {
                  "id": 665,
                  "nodeType": "PlaceholderStatement",
                  "src": "8406:1:6"
                }
              ]
            },
            "id": 667,
            "name": "onlyInspector",
            "nameLocation": "8299:13:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8312:2:6"
            },
            "src": "8290:124:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "8472:45:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 674,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "8497:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$874",
                            "typeString": "contract Escrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Escrow_$874",
                            "typeString": "contract Escrow"
                          }
                        ],
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8489:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8489:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8489:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8503:7:6",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "8489:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 671,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "8482:28:6"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "8429:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8439:2:6"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "8463:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8463:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8462:9:6"
            },
            "scope": 874,
            "src": "8420:97:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "9523:422:6",
              "statements": [
                {
                  "body": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "9752:187:6",
                    "statements": [
                      {
                        "assignments": [
                          696
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 696,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "9774:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 714,
                            "src": "9766:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 695,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9766:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 700,
                        "initialValue": {
                          "baseExpression": {
                            "id": 697,
                            "name": "borrowers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "9786:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 699,
                          "indexExpression": {
                            "id": 698,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "9796:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9786:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9766:36:6"
                      },
                      {
                        "assignments": [
                          702
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 702,
                            "mutability": "mutable",
                            "name": "userTotalValue",
                            "nameLocation": "9824:14:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 714,
                            "src": "9816:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 701,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9816:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 706,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 704,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "9859:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 703,
                            "name": "getUserTotalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "9841:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9841:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9816:53:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 710,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "9902:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 711,
                              "name": "userTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "9913:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 707,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "9883:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1065",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9893:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1032,
                            "src": "9883:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9883:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 713,
                        "nodeType": "ExpressionStatement",
                        "src": "9883:45:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 688,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "9717:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 689,
                        "name": "borrowers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9725:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9735:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9725:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9717:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 715,
                  "initializationExpression": {
                    "assignments": [
                      685
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "9706:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "9698:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9698:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 687,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9714:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9698:17:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9743:7:6",
                      "subExpression": {
                        "id": 692,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "9743:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 694,
                    "nodeType": "ExpressionStatement",
                    "src": "9743:7:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "9693:246:6"
                }
              ]
            },
            "functionSelector": "60ab5852",
            "id": 717,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 682,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 681,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9513:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 906,
                  "src": "9513:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "9513:9:6"
              }
            ],
            "name": "issueTokens",
            "nameLocation": "9492:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9503:2:6"
            },
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9523:0:6"
            },
            "scope": 874,
            "src": "9483:462:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "10023:617:6",
              "statements": [
                {
                  "assignments": [
                    725
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 725,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "10041:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "10033:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 724,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10033:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 727,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10054:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10033:22:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 728,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "10134:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 730,
                      "indexExpression": {
                        "id": 729,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "10149:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10134:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10159:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10134:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 736,
                  "nodeType": "IfStatement",
                  "src": "10130:65:6",
                  "trueBody": {
                    "id": 735,
                    "nodeType": "Block",
                    "src": "10162:33:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10183:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 723,
                        "id": 734,
                        "nodeType": "Return",
                        "src": "10176:8:6"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 767,
                    "nodeType": "Block",
                    "src": "10341:266:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 749,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "10355:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 750,
                              "name": "totalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 725,
                              "src": "10384:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 752,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 719,
                                  "src": "10456:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 753,
                                      "name": "stakedNftAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37,
                                      "src": "10483:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => address))"
                                      }
                                    },
                                    "id": 755,
                                    "indexExpression": {
                                      "id": 754,
                                      "name": "_user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 719,
                                      "src": "10500:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10483:23:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 757,
                                  "indexExpression": {
                                    "id": 756,
                                    "name": "nftStakedIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 738,
                                    "src": "10507:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10483:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 758,
                                      "name": "stakedNftId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 43,
                                      "src": "10544:11:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 760,
                                    "indexExpression": {
                                      "id": 759,
                                      "name": "_user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 719,
                                      "src": "10556:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10544:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 762,
                                  "indexExpression": {
                                    "id": 761,
                                    "name": "nftStakedIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 738,
                                    "src": "10563:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10544:34:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 751,
                                "name": "getUserSingleNftValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 810,
                                "src": "10413:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,address,uint256) view returns (uint256)"
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10413:183:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10384:212:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10355:241:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 766,
                        "nodeType": "ExpressionStatement",
                        "src": "10355:241:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 741,
                      "name": "nftStakedIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "10262:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 742,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "10279:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 744,
                      "indexExpression": {
                        "id": 743,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "10294:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10279:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10262:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 768,
                  "initializationExpression": {
                    "assignments": [
                      738
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "nftStakedIndex",
                        "nameLocation": "10230:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 768,
                        "src": "10222:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10222:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 740,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10247:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10222:26:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10314:16:6",
                      "subExpression": {
                        "id": 746,
                        "name": "nftStakedIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "10314:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 748,
                    "nodeType": "ExpressionStatement",
                    "src": "10314:16:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "10204:403:6"
                },
                {
                  "expression": {
                    "id": 769,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 725,
                    "src": "10623:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 723,
                  "id": 770,
                  "nodeType": "Return",
                  "src": "10616:17:6"
                }
              ]
            },
            "functionSelector": "af3f5e22",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalValue",
            "nameLocation": "9960:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "9986:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "9978:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9978:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9977:15:6"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "10014:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10014:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10013:9:6"
            },
            "scope": 874,
            "src": "9951:689:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 809,
              "nodeType": "Block",
              "src": "10789:298:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 783,
                        "name": "numOfNftStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "10803:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 785,
                      "indexExpression": {
                        "id": 784,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "10818:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10803:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10828:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10803:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 791,
                  "nodeType": "IfStatement",
                  "src": "10799:65:6",
                  "trueBody": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "10831:33:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10852:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 782,
                        "id": 789,
                        "nodeType": "Return",
                        "src": "10845:8:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    793,
                    795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "10882:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 809,
                      "src": "10874:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 792,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10874:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 795,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "10897:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 809,
                      "src": "10889:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 794,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10889:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 800,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 797,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "10921:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 798,
                        "name": "_nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "10934:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 796,
                      "name": "getNftValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "10909:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10909:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10873:68:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 801,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 793,
                          "src": "10959:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10968:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 803,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "10972:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10968:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 805,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10967:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10959:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 807,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10958:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 782,
                  "id": 808,
                  "nodeType": "Return",
                  "src": "10951:31:6"
                }
              ]
            },
            "functionSelector": "8dc3306f",
            "id": 810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleNftValue",
            "nameLocation": "10655:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "10694:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "10686:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10686:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "10717:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "10709:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10709:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "10746:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "10738:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10738:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10676:82:6"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "10780:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10780:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10779:9:6"
            },
            "scope": 874,
            "src": "10646:441:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "11218:532:6",
              "statements": [
                {
                  "assignments": [
                    822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 822,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "11424:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "11416:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 821,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11416:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 826,
                  "initialValue": {
                    "baseExpression": {
                      "id": 823,
                      "name": "nftPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "11443:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 825,
                    "indexExpression": {
                      "id": 824,
                      "name": "_nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "11463:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11443:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11416:59:6"
                },
                {
                  "assignments": [
                    829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 829,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "11507:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "11485:31:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1227",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 828,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 827,
                          "name": "AggregatorV3Interface",
                          "nameLocations": [
                            "11485:21:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1227,
                          "src": "11485:21:6"
                        },
                        "referencedDeclaration": 1227,
                        "src": "11485:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1227",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 833,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 831,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "11554:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 830,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1227,
                      "src": "11519:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1227_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11519:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1227",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11485:95:6"
                },
                {
                  "assignments": [
                    null,
                    835,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 835,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "11600:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "11593:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 834,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11593:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 839,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 836,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "11615:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1227",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11625:15:6",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1226,
                      "src": "11615:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11615:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11590:52:6"
                },
                {
                  "assignments": [
                    841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 841,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "11660:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "11652:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11652:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 848,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 844,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "11679:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1227",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11689:8:6",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1188,
                          "src": "11679:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11679:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11671:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11671:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11671:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11652:48:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 851,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 835,
                            "src": "11726:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11718:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 849,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11718:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11718:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 853,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "11734:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 854,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11717:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 820,
                  "id": 855,
                  "nodeType": "Return",
                  "src": "11710:33:6"
                }
              ]
            },
            "functionSelector": "e45e09a2",
            "id": 857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftValue",
            "nameLocation": "11102:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "11122:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "11114:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11114:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "_nftId",
                  "nameLocation": "11143:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "11135:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11135:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11113:37:6"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "11196:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11196:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "11205:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11205:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11195:18:6"
            },
            "scope": 874,
            "src": "11093:657:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "11898:128:6",
              "statements": [
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 866,
                        "name": "nftPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "11974:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 868,
                      "indexExpression": {
                        "id": 867,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 859,
                        "src": "11994:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11974:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 869,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "12009:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11974:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "11974:45:6"
                }
              ]
            },
            "functionSelector": "877dd39d",
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 864,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 863,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11888:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 906,
                  "src": "11888:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "11888:9:6"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "11765:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "11803:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "11795:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11795:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 861,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "11864:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "11856:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11856:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11785:95:6"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11898:0:6"
            },
            "scope": 874,
            "src": "11756:270:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 875,
        "src": "1203:10825:6",
        "usedErrors": []
      }
    ],
    "src": "931:11098:6"
  },
  "bytecode": "",
  "bytecodeSha1": "ef28a48dd1f0ea75226378d0387071b99b4cc8f9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Escrow",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "59": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "58": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Escrow.isBorrowers": {
          "52": [
            7926,
            7951,
            false
          ]
        },
        "Escrow.nftIsAllowed": {
          "53": [
            7640,
            7684,
            false
          ]
        },
        "Escrow.nftStaking": {
          "56": [
            4949,
            4974,
            true
          ],
          "57": [
            5394,
            5425,
            false
          ]
        },
        "Escrow.nftUnStaking": {
          "54": [
            3877,
            3902,
            true
          ],
          "55": [
            4569,
            4600,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "49": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "50": [
            2541,
            2558
          ],
          "51": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "2": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "11": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "43": [
            2161,
            2234
          ],
          "44": [
            2244,
            2272
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "48": [
            712,
            729
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {
        "Escrow.addAllowedNfts": {
          "10": [
            7360,
            7389
          ]
        },
        "Escrow.getBalance": {
          "0": [
            8482,
            8510
          ]
        },
        "Escrow.getNftLockData": {
          "1": [
            7098,
            7275
          ]
        },
        "Escrow.getNftValue": {
          "42": [
            11710,
            11743
          ]
        },
        "Escrow.getUserSingleNftValue": {
          "13": [
            10845,
            10853
          ],
          "14": [
            10951,
            10982
          ]
        },
        "Escrow.getUserTotalValue": {
          "20": [
            10176,
            10184
          ],
          "21": [
            10355,
            10596
          ],
          "22": [
            10314,
            10330
          ],
          "23": [
            10616,
            10633
          ]
        },
        "Escrow.isBorrowers": {
          "3": [
            7971,
            7982
          ],
          "4": [
            7899,
            7906
          ],
          "5": [
            8016,
            8028
          ]
        },
        "Escrow.issueTokens": {
          "8": [
            9883,
            9928
          ],
          "9": [
            9743,
            9750
          ]
        },
        "Escrow.loanRepay": {
          "6": [
            3215,
            3340
          ]
        },
        "Escrow.loanTransfer": {
          "7": [
            3550,
            3616
          ]
        },
        "Escrow.nftIsAllowed": {
          "15": [
            7704,
            7715
          ],
          "16": [
            7593,
            7611
          ]
        },
        "Escrow.nftLock": {
          "17": [
            6708,
            6766
          ],
          "18": [
            6776,
            6828
          ],
          "19": [
            6838,
            6892
          ]
        },
        "Escrow.nftStaking": {
          "34": [
            4928,
            5044
          ],
          "35": [
            5054,
            5122
          ],
          "36": [
            5132,
            5202
          ],
          "37": [
            5212,
            5272
          ],
          "38": [
            5282,
            5380
          ],
          "39": [
            5441,
            5467
          ],
          "40": [
            5481,
            5529
          ],
          "41": [
            5549,
            5608
          ]
        },
        "Escrow.nftUnStaking": {
          "24": [
            3856,
            3972
          ],
          "25": [
            3983,
            4051
          ],
          "26": [
            4322,
            4371
          ],
          "27": [
            4381,
            4420
          ],
          "28": [
            4430,
            4485
          ],
          "29": [
            4495,
            4554
          ],
          "30": [
            4616,
            4649
          ],
          "31": [
            4663,
            4713
          ],
          "32": [
            4727,
            4766
          ],
          "33": [
            4780,
            4795
          ]
        },
        "Escrow.setOffers": {
          "45": [
            5815,
            5863
          ],
          "46": [
            5873,
            5925
          ],
          "47": [
            5935,
            5983
          ]
        },
        "Escrow.setPriceFeedContract": {
          "12": [
            11974,
            12019
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.5.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1203:10825:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:7;;;585:2;570:18;2695:68:6;;;;;;;;7774:261;;;;;;:::i;:::-;;:::i;:::-;;;989:14:7;;982:22;964:41;;952:2;937:18;7774:261:6;824:187:7;8420:97:6;8489:21;8420:97;;2154:49;;;;;;:::i;:::-;;;;;;;;;;;;;;6905:377;;;;;;:::i;:::-;-1:-1:-1;;;;;7119:33:6;;;7024:7;7119:33;;;:20;:33;;;;;;;;:41;;;;;;;;;7174:30;;;:17;:30;;;;;:38;;;;;;;;;7226:31;;;:18;:31;;;;;:39;;;;;;;;;;7119:41;;;;;6905:377;;;;;-1:-1:-1;;;;;1236:32:7;;;1218:51;;1300:2;1285:18;;1278:34;;;;1328:18;;;1321:34;1206:2;1191:18;6905:377:6;1016:345:7;2377:73:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2782:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3068:279;;;;;;:::i;:::-;;:::i;:::-;;1236:28;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1715:32:7;;;1697:51;;1685:2;1670:18;1236:28:6;1551:203:7;3353:270:6;;;;;;:::i;:::-;;:::i;1702:35::-;;;;;;1403:23;;;;;-1:-1:-1;;;;;1403:23:6;;;9483:462;;;:::i;7288:108::-;;;;;;:::i;:::-;;:::i;2456:72::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:0;;;:::i;2209:26:6:-;;;;;;:::i;:::-;;:::i;2051:97::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2534:75;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2534:75:6;;;11756:270;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;10646:441:6;;;;;;:::i;:::-;;:::i;7402:366::-;;;;;;:::i;:::-;;:::i;1829:71::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:71:6;;;6447:452;;;;;;:::i;:::-;;:::i;1906:66::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9951:689;;;;;;:::i;:::-;;:::i;2241:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3629:1183;;;;;;:::i;:::-;;:::i;4818:797::-;;;;;;:::i;:::-;;:::i;2870:70::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;11093:657;;;;;;:::i;:::-;;:::i;:::-;;;;3225:25:7;;;3281:2;3266:18;;3259:34;;;;3198:18;11093:657:6;3051:248:7;5996:445:6;;;;;;:::i;:::-;-1:-1:-1;;;;;6206:26:6;;;;6110:7;6206:26;;;:13;:26;;;;;;;;:34;;;;;;;;;6274:28;;;:15;:28;;;;;:36;;;;;;;;;6342:26;;;:13;:26;;;;;:34;;;;;;;;;;6206;;5996:445;;;;;3506:25:7;;;3562:2;3547:18;;3540:34;;;;3590:18;;;3583:34;3494:2;3479:18;5996:445:6;3304:319:7;2081:198:0;;;;;;:::i;:::-;;:::i;1270:54:6:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1270:54:6;;;5621:369;;;;;;:::i;:::-;;:::i;7774:261::-;7831:4;;7847:160;7879:11;:18;7871:26;;7847:160;;;7946:5;-1:-1:-1;;;;;7926:25:6;:9;7936:5;7926:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7926:16:6;:25;7922:75;;-1:-1:-1;7978:4:6;;7774:261;-1:-1:-1;;7774:261:6:o;7922:75::-;7899:7;;;;:::i;:::-;;;;7847:160;;;-1:-1:-1;8023:5:6;;7774:261;-1:-1:-1;;7774:261:6:o;3068:279::-;3215:125;;-1:-1:-1;;;3215:125:6;;3267:10;3215:125;;;4737:34:7;3299:4:6;4787:18:7;;;4780:43;4839:18;;;4832:34;;;-1:-1:-1;;;;;3215:38:6;;;;;4672:18:7;;3215:125:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3068:279;;:::o;1236:28::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1236:28:6;;-1:-1:-1;1236:28:6;:::o;3353:270::-;1094:13:0;:11;:13::i;:::-;3550:66:6::1;::::0;-1:-1:-1;;;3550:66:6;;-1:-1:-1;;;;;5351:32:7;;;3550:66:6::1;::::0;::::1;5333:51:7::0;5400:18;;;5393:34;;;3550::6;::::1;::::0;::::1;::::0;5306:18:7;;3550:66:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3353:270:::0;;;:::o;9483:462::-;1094:13:0;:11;:13::i;:::-;9698::6::1;9693:246;9725:9;:16:::0;9717:24;::::1;9693:246;;;9766:17;9786:9;9796:5;9786:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;9786:16:6::1;::::0;-1:-1:-1;9841:28:6::1;9786:16:::0;9841:17:::1;:28::i;:::-;9883:9;::::0;:45:::1;::::0;-1:-1:-1;;;9883:45:6;;-1:-1:-1;;;;;5351:32:7;;;9883:45:6::1;::::0;::::1;5333:51:7::0;5400:18;;;5393:34;;;9816:53:6;;-1:-1:-1;9883:9:6;::::1;::::0;:18:::1;::::0;5306::7;;9883:45:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9752:187;;9743:7;;;;;:::i;:::-;;;;9693:246;;;;9483:462::o:0;7288:108::-;1094:13:0;:11;:13::i;:::-;7360:11:6::1;:29:::0;;;;::::1;::::0;;-1:-1:-1;7360:29:6;;;;;::::1;::::0;;-1:-1:-1;;;;;;7360:29:6::1;-1:-1:-1::0;;;;;7360:29:6;;;::::1;::::0;;;::::1;::::0;;7288:108::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2209:26:6:-;;;;;;;;;;;;11756:270;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;11974:32:6;;::::1;;::::0;;;:19:::1;:32;::::0;;;;:45;;-1:-1:-1;;;;;;11974:45:6::1;::::0;;;::::1;;::::0;;11756:270::o;10646:441::-;-1:-1:-1;;;;;10803:21:6;;10780:7;10803:21;;;:14;:21;;;;;;10799:65;;-1:-1:-1;10852:1:6;10845:8;;10799:65;10874:13;10889:16;10909:32;10921:11;10934:6;10909:11;:32::i;:::-;10873:68;;-1:-1:-1;10873:68:6;-1:-1:-1;10968:12:6;10873:68;10968:2;:12;:::i;:::-;10959:22;;:5;:22;:::i;:::-;10951:31;;;;10646:441;;;;;;:::o;7402:366::-;7466:4;;7482:258;7561:11;:18;7542:37;;7482:258;;;7673:11;-1:-1:-1;;;;;7640:44:6;:11;7652:16;7640:29;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7640:29:6;:44;7636:94;;-1:-1:-1;7711:4:6;;7402:366;-1:-1:-1;;7402:366:6:o;7636:94::-;7593:18;;;;:::i;:::-;;;;7482:258;;6447:452;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6708:33:6;;::::1;;::::0;;;:20:::1;:33;::::0;;;;;;;:41;;;;;;;;:58;;-1:-1:-1;;;;;;6708:58:6::1;::::0;;;::::1;::::0;;;::::1;::::0;;;6776:30;;;:17:::1;:30:::0;;;;;:38;;;;;;;;:52;;;;6838:31;;:18:::1;:31:::0;;;;;:39;;;;;;;;;;:54;6447:452::o;9951:689::-;-1:-1:-1;;;;;10134:21:6;;10014:7;10134:21;;;:14;:21;;;;;;10014:7;;10130:65;;-1:-1:-1;10183:1:6;;9951:689;-1:-1:-1;;9951:689:6:o;10130:65::-;10222:22;10204:403;-1:-1:-1;;;;;10279:21:6;;;;;;:14;:21;;;;;;10262:38;;10204:403;;;-1:-1:-1;;;;;10483:23:6;;;;;;;:16;:23;;;;;;;;:39;;;;;;;;;10544:18;;;:11;:18;;;;;:34;;;;;;;;;10413:183;;10456:5;;10483:39;;10413:21;:183::i;:::-;10384:212;;:10;:212;:::i;:::-;10355:241;-1:-1:-1;10314:16:6;;;;:::i;:::-;;;;10204:403;;;-1:-1:-1;10623:10:6;9951:689;-1:-1:-1;;9951:689:6:o;3629:1183::-;1094:13:0;:11;:13::i;:::-;3877:25:6::1;3890:11;3877:12;:25::i;:::-;3856:116;;;;-1:-1:-1::0;;;3856:116:6::1;;;;;;;:::i;:::-;;;;;;;;;3983:68;::::0;-1:-1:-1;;;3983:68:6;;4025:4:::1;3983:68;::::0;::::1;4737:34:7::0;4032:10:6::1;4787:18:7::0;;;4780:43;4839:18;;;4832:34;;;-1:-1:-1;;;;;3983:33:6;::::1;::::0;::::1;::::0;4672:18:7;;3983:68:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4092:10:6::1;4061:13;4077:26:::0;;;:14:::1;:26;::::0;;;;;;;-1:-1:-1;;;;;4077:39:6;;::::1;::::0;;;;;;;;:47;;;;;;;;;4156:28;;;:16:::1;:28:::0;;;;;4198:14:::1;:26:::0;;;;;;;;4156:78;;;;;;;;;;4261:23;;;:11:::1;:23:::0;;;;;:51;;;;;;;;;;4322:35;;;;;;;;;:49;;-1:-1:-1;;;;;;4322:49:6::1;4156:78:::0;;;::::1;4322:49:::0;;::::1;::::0;;;4381:30;;;;;:39;;;4430;;;;;;;;;:47;;;;;;;;:55;;;4524:26;;;;;;;;;;4077:47;;-1:-1:-1;4156:78:6;-1:-1:-1;4524:30:6::1;::::0;-1:-1:-1;;4524:30:6::1;:::i;:::-;4510:10;4495:26;::::0;;;:14:::1;:26;::::0;;;;:59;;;4569:31;4565:241:::1;;4638:10;4624:25;::::0;;;:13:::1;:25;::::0;;;;;4682:9:::1;4692:16:::0;;4624:25;;-1:-1:-1;4682:9:6;4692:20:::1;::::0;4711:1:::1;::::0;4692:20:::1;:::i;:::-;4682:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;4663:9:::1;:16:::0;;-1:-1:-1;;;;;4682:31:6;;::::1;::::0;4673:5;;4663:16;::::1;;;;;:::i;:::-;;;;;;;;;:50;;;;;-1:-1:-1::0;;;;;4663:50:6::1;;;;;-1:-1:-1::0;;;;;4663:50:6::1;;;;;;4761:5;4727:13;:31;4741:9;4751:5;4741:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;4741:16:6::1;4727:31:::0;;;::::1;::::0;;;;;;;;:39;4780:9:::1;:15:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;4780:15:6;;;;;-1:-1:-1;;;;;;4780:15:6::1;::::0;;;;;4565:241:::1;3725:1087;;;3629:1183:::0;;:::o;4818:797::-;4949:25;4962:11;4949:12;:25::i;:::-;4928:116;;;;-1:-1:-1;;;4928:116:6;;;;;;;:::i;:::-;5054:68;;-1:-1:-1;;;5054:68:6;;5088:10;5054:68;;;4737:34:7;5108:4:6;4787:18:7;;;4780:43;4839:18;;;4832:34;;;-1:-1:-1;;;;;5054:33:6;;;;;4672:18:7;;5054:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5149:10:6;5132:28;;;;:16;:28;;;;;;;;5161:14;:26;;;;;;;;5132:56;;;;;;;;:70;;-1:-1:-1;;;;;;5132:70:6;-1:-1:-1;;;;;5132:70:6;;;;;;;;5212:23;;;:11;:23;;;;;5236:26;;5212:51;;;;;;;:60;;;5332:48;;;;;5282:14;:26;;;;;:39;;;;;;;;;:47;;;;;;;;:98;;;5394:26;;;;;:31;;-1:-1:-1;5390:150:6;;-1:-1:-1;5390:150:6;5441:9;:26;;;;;;;;-1:-1:-1;5441:26:6;;;;;;;;;-1:-1:-1;;;;;;5441:26:6;5456:10;5441:26;;;5509:16;;:20;;5441:26;5509:20;:::i;:::-;5495:10;5481:25;;;;:13;:25;;;;;:48;5390:150;5593:10;5578:26;;;;:14;:26;;;;;;:30;;5607:1;5578:30;:::i;:::-;5564:10;5549:26;;;;:14;:26;;;;;:59;-1:-1:-1;;4818:797:6:o;11093:657::-;-1:-1:-1;;;;;11443:32:6;;;11196:7;11443:32;;;:19;:32;;;;;;;11615:27;;-1:-1:-1;;;11615:27:6;;;;11196:7;;;;11443:32;;;;;11196:7;;11443:32;;11615:25;;:27;;;;;;;;;;;;;;;11443:32;11615:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11590:52;;;;;;11652:16;11679:9;-1:-1:-1;;;;;11679:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11726:5;;-1:-1:-1;;11671:29:6;;;-1:-1:-1;;;11093:657:6;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;8984:2:7;2161:73:0::1;::::0;::::1;8966:21:7::0;9023:2;9003:18;;;8996:30;9062:34;9042:18;;;9035:62;-1:-1:-1;;;9113:18:7;;;9106:36;9159:19;;2161:73:0::1;8782:402:7::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;5621:369:6:-:0;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5815:26:6;;::::1;;::::0;;;:13:::1;:26;::::0;;;;;;;:34;;;;;;;;:48;;;;5873:28;;;:15:::1;:28:::0;;;;;:36;;;;;;;;:52;;;;5935:26;;;:13:::1;:26:::0;;;;;:34;;;;;;;;;:48;5621:369::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9391:2:7;1414:68:0;;;9373:21:7;;;9410:18;;;9403:30;9469:34;9449:18;;;9442:62;9521:18;;1414:68:0;9189:356:7;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:7:o;633:186::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;784:29;803:9;784:29;:::i;1366:180::-;1425:6;1478:2;1466:9;1457:7;1453:23;1449:32;1446:52;;;1494:1;1491;1484:12;1446:52;-1:-1:-1;1517:23:7;;1366:180;-1:-1:-1;1366:180:7:o;1759:328::-;1836:6;1844;1852;1905:2;1893:9;1884:7;1880:23;1876:32;1873:52;;;1921:1;1918;1911:12;1873:52;1944:29;1963:9;1944:29;:::i;:::-;1934:39;;1992:38;2026:2;2015:9;2011:18;1992:38;:::i;:::-;1982:48;;2077:2;2066:9;2062:18;2049:32;2039:42;;1759:328;;;;;:::o;2315:260::-;2383:6;2391;2444:2;2432:9;2423:7;2419:23;2415:32;2412:52;;;2460:1;2457;2450:12;2412:52;2483:29;2502:9;2483:29;:::i;:::-;2473:39;;2531:38;2565:2;2554:9;2550:18;2531:38;:::i;:::-;2521:48;;2315:260;;;;;:::o;2580:466::-;2675:6;2683;2691;2699;2707;2760:3;2748:9;2739:7;2735:23;2731:33;2728:53;;;2777:1;2774;2767:12;2728:53;2800:29;2819:9;2800:29;:::i;:::-;2790:39;;2876:2;2865:9;2861:18;2848:32;2838:42;;2899:38;2933:2;2922:9;2918:18;2899:38;:::i;:::-;2580:466;;;;-1:-1:-1;2889:48:7;;2984:2;2969:18;;2956:32;;-1:-1:-1;3035:3:7;3020:19;3007:33;;2580:466;-1:-1:-1;;2580:466:7:o;3628:460::-;3723:6;3731;3739;3747;3755;3808:3;3796:9;3787:7;3783:23;3779:33;3776:53;;;3825:1;3822;3815:12;3776:53;3848:29;3867:9;3848:29;:::i;:::-;3838:39;3924:2;3909:18;;3896:32;;-1:-1:-1;3975:2:7;3960:18;;3947:32;;4026:2;4011:18;;3998:32;;-1:-1:-1;4077:3:7;4062:19;4049:33;;-1:-1:-1;3628:460:7;-1:-1:-1;;;3628:460:7:o;4093:127::-;4154:10;4149:3;4145:20;4142:1;4135:31;4185:4;4182:1;4175:15;4209:4;4206:1;4199:15;4225:127;4286:10;4281:3;4277:20;4274:1;4267:31;4317:4;4314:1;4307:15;4341:4;4338:1;4331:15;4357:135;4396:3;4417:17;;;4414:43;;4437:18;;:::i;:::-;-1:-1:-1;4484:1:7;4473:13;;4357:135::o;4877:277::-;4944:6;4997:2;4985:9;4976:7;4972:23;4968:32;4965:52;;;5013:1;5010;5003:12;4965:52;5045:9;5039:16;5098:5;5091:13;5084:21;5077:5;5074:32;5064:60;;5120:1;5117;5110:12;5438:422;5527:1;5570:5;5527:1;5584:270;5605:7;5595:8;5592:21;5584:270;;;5664:4;5660:1;5656:6;5652:17;5646:4;5643:27;5640:53;;;5673:18;;:::i;:::-;5723:7;5713:8;5709:22;5706:55;;;5743:16;;;;5706:55;5822:22;;;;5782:15;;;;5584:270;;;5588:3;5438:422;;;;;:::o;5865:806::-;5914:5;5944:8;5934:80;;-1:-1:-1;5985:1:7;5999:5;;5934:80;6033:4;6023:76;;-1:-1:-1;6070:1:7;6084:5;;6023:76;6115:4;6133:1;6128:59;;;;6201:1;6196:130;;;;6108:218;;6128:59;6158:1;6149:10;;6172:5;;;6196:130;6233:3;6223:8;6220:17;6217:43;;;6240:18;;:::i;:::-;-1:-1:-1;;6296:1:7;6282:16;;6311:5;;6108:218;;6410:2;6400:8;6397:16;6391:3;6385:4;6382:13;6378:36;6372:2;6362:8;6359:16;6354:2;6348:4;6345:12;6341:35;6338:77;6335:159;;;-1:-1:-1;6447:19:7;;;6479:5;;6335:159;6526:34;6551:8;6545:4;6526:34;:::i;:::-;6596:6;6592:1;6588:6;6584:19;6575:7;6572:32;6569:58;;;6607:18;;:::i;:::-;6645:20;;-1:-1:-1;5865:806:7;;;;;:::o;6676:131::-;6736:5;6765:36;6792:8;6786:4;6765:36;:::i;6812:217::-;6852:1;6878;6868:132;;6922:10;6917:3;6913:20;6910:1;6903:31;6957:4;6954:1;6947:15;6985:4;6982:1;6975:15;6868:132;-1:-1:-1;7014:9:7;;6812:217::o;7034:125::-;7099:9;;;7120:10;;;7117:36;;;7133:18;;:::i;7164:408::-;7366:2;7348:21;;;7405:2;7385:18;;;7378:30;7444:34;7439:2;7424:18;;7417:62;-1:-1:-1;;;7510:2:7;7495:18;;7488:42;7562:3;7547:19;;7164:408::o;7577:128::-;7644:9;;;7665:11;;;7662:37;;;7679:18;;:::i;7710:127::-;7771:10;7766:3;7762:20;7759:1;7752:31;7802:4;7799:1;7792:15;7826:4;7823:1;7816:15;7842:179;7920:13;;7973:22;7962:34;;7952:45;;7942:73;;8011:1;8008;8001:12;8026:473;8129:6;8137;8145;8153;8161;8214:3;8202:9;8193:7;8189:23;8185:33;8182:53;;;8231:1;8228;8221:12;8182:53;8254:39;8283:9;8254:39;:::i;:::-;8244:49;;8333:2;8322:9;8318:18;8312:25;8302:35;;8377:2;8366:9;8362:18;8356:25;8346:35;;8421:2;8410:9;8406:18;8400:25;8390:35;;8444:49;8488:3;8477:9;8473:19;8444:49;:::i;:::-;8434:59;;8026:473;;;;;;;;:::o;8504:273::-;8572:6;8625:2;8613:9;8604:7;8600:23;8596:32;8593:52;;;8641:1;8638;8631:12;8593:52;8673:9;8667:16;8723:4;8716:5;8712:16;8705:5;8702:27;8692:55;;8743:1;8740;8733:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1203,
    12028
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EF4C7AD GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xB026E6BD GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE45E09A2 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE45E09A2 EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0xEA98A950 EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xF3EAF005 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0xF8DEDE7C EQ PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB026E6BD EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xBBB62028 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBFEECC51 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xDCFD51C3 EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DDEFA36 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DDEFA36 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x9F42CE02 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xAE422B53 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xAEB4E4A4 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7EF4C7AD EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x8DC3306F EQ PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x512A53BC GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x6C59EB3B GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x6C59EB3B EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x6E9E9790 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x7924D93F EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x79D2FDE4 EQ PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x512A53BC EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x567D1EBF EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CDB786A GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2CDB786A EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x2D1AB89C EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x44589E6E EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x466B3362 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x4D23D8AF EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD4A267 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xE32A0E3 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x1316263A EQ PUSH2 0x288 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24C PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST SELFBALANCE PUSH2 0x24C JUMP JUMPDEST PUSH2 0x24C PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0x753 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x24C PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x3AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x397 PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x24C PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x545 CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x24C PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x5C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x60C PUSH2 0x607 CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x680 PUSH2 0x62F CALLDATASIZE PUSH1 0x4 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE PUSH1 0x12 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE PUSH1 0x11 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x6A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x6BC CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x6E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x74A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x715 JUMPI PUSH2 0x715 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x738 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x742 DUP2 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6EE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x801 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x882 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x8C3 DUP3 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x1429 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x94A SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x885 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x95D PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9B6 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x9C0 PUSH1 0x0 PUSH2 0x121B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DA PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA2D JUMPI POP PUSH1 0x0 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 DUP6 PUSH2 0xFEE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xA4A DUP2 PUSH1 0xA PUSH2 0x1531 JUMP JUMPDEST PUSH2 0xA54 SWAP1 DUP4 PUSH2 0x153D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x74A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA8B JUMPI PUSH2 0xA8B PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAAE JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xAB8 DUP2 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA64 JUMP JUMPDEST PUSH2 0xAC8 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP8 SWAP1 SWAP10 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP8 SSTORE DUP2 DUP2 MSTORE PUSH1 0xE DUP8 MSTORE DUP5 DUP2 KECCAK256 DUP7 DUP3 MSTORE DUP8 MSTORE DUP5 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP3 MSTORE PUSH1 0xD DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP4 DUP3 MSTORE SWAP3 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0xB57 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xBDD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBBF SWAP3 DUP8 SWAP3 AND SWAP1 PUSH2 0xA08 JUMP JUMPDEST PUSH2 0xBC9 SWAP1 DUP4 PUSH2 0x155F JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xBD5 DUP2 PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB5A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBEC PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0xBF5 DUP3 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC11 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP10 DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP7 DUP7 MSTORE PUSH1 0x7 DUP6 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0xA DUP1 DUP8 MSTORE DUP6 DUP9 KECCAK256 DUP1 SLOAD DUP1 DUP11 MSTORE DUP4 DUP10 MSTORE DUP8 DUP11 KECCAK256 SLOAD DUP12 DUP12 MSTORE PUSH1 0x8 DUP11 MSTORE DUP9 DUP12 KECCAK256 SWAP2 DUP12 MSTORE DUP2 DUP11 MSTORE DUP9 DUP12 KECCAK256 SLOAD DUP7 DUP13 MSTORE SWAP5 DUP11 MSTORE DUP9 DUP12 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP8 AND SWAP1 DUP2 OR SWAP1 SWAP7 SSTORE DUP9 MSTORE DUP7 DUP10 KECCAK256 DUP4 SWAP1 SSTORE DUP5 DUP10 MSTORE SWAP5 DUP8 MSTORE DUP6 DUP9 KECCAK256 DUP3 DUP10 MSTORE DUP8 MSTORE SWAP5 DUP8 KECCAK256 DUP3 SWAP1 SSTORE SWAP7 SWAP1 SWAP6 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP1 SLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH2 0xD34 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x15BE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE SUB PUSH2 0xE4A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xB DUP1 SLOAD SWAP2 SWAP5 POP SWAP1 PUSH2 0xD6F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x15BE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD7F JUMPI PUSH2 0xD7F PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0xDAB JUMPI PUSH2 0xDAB PUSH2 0x13E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xDF1 JUMPI PUSH2 0xDF1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE PUSH1 0xB DUP1 SLOAD DUP1 PUSH2 0xE27 JUMPI PUSH2 0xE27 PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE5A DUP3 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC11 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA DUP1 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP7 DUP7 MSTORE PUSH1 0x8 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP4 SLOAD DUP8 MSTORE DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP11 SWAP1 SSTORE DUP7 DUP7 MSTORE SWAP2 SLOAD PUSH1 0x9 DUP6 MSTORE DUP4 DUP7 KECCAK256 SWAP3 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP10 DUP7 MSTORE DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE SWAP4 DUP4 MSTORE SWAP1 MSTORE SUB SWAP2 POP PUSH2 0xFBF SWAP1 POP JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 DUP4 SWAP1 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 SLOAD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFDA SWAP1 PUSH1 0x1 PUSH2 0x155F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x104F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP2 SWAP6 POP POP PUSH1 0xFF AND SWAP3 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F7 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x952 DUP2 PUSH2 0x121B JUMP JUMPDEST PUSH2 0x116D PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP3 DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP7 DUP4 MSTORE DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP7 SWAP1 SWAP7 SSTORE SWAP1 DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE DUP3 DUP2 KECCAK256 SWAP4 DUP2 MSTORE SWAP3 SWAP1 SWAP4 MSTORE SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A3 DUP4 PUSH2 0x126B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA59 DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1303 DUP5 PUSH2 0x126B JUMP JUMPDEST SWAP3 POP PUSH2 0x1311 PUSH1 0x20 DUP6 ADD PUSH2 0x126B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133D DUP4 PUSH2 0x126B JUMP JUMPDEST SWAP2 POP PUSH2 0x134B PUSH1 0x20 DUP5 ADD PUSH2 0x126B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1375 DUP7 PUSH2 0x126B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x138A PUSH1 0x40 DUP8 ADD PUSH2 0x126B JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C3 DUP7 PUSH2 0x126B JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1422 JUMPI PUSH2 0x1422 PUSH2 0x13FA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1486 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x146C JUMPI PUSH2 0x146C PUSH2 0x13FA JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1479 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1450 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x149D JUMPI POP PUSH1 0x1 PUSH2 0x152B JUMP JUMPDEST DUP2 PUSH2 0x14AA JUMPI POP PUSH1 0x0 PUSH2 0x152B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x14C0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x14CA JUMPI PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x152B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x14DB JUMPI PUSH2 0x14DB PUSH2 0x13FA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x152B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1509 JUMPI POP DUP2 DUP2 EXP PUSH2 0x152B JUMP JUMPDEST PUSH2 0x1513 DUP4 DUP4 PUSH2 0x144B JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1527 JUMPI PUSH2 0x1527 PUSH2 0x13FA JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP4 DUP4 PUSH2 0x148E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x155A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x152B JUMPI PUSH2 0x152B PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x63757272656E74206E6674206973206E6F7420616C6C6F77656420696E206F75 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x722077686974656C69737421 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x152B JUMPI PUSH2 0x152B PUSH2 0x13FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1622 DUP7 PUSH2 0x15E7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1645 PUSH1 0x80 DUP8 ADD PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xA59 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH13 0x624EA9A1252264D5E2694AF8DA 0x5C 0xE0 0xE8 0xF PUSH29 0x15D28F2EF77682BC70B1F25F64736F6C63430008110033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21C"
    },
    "25": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7EF4C7AD"
    },
    "38": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB026E6BD"
    },
    "49": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE45E09A2"
    },
    "60": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "GT",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE45E09A2"
    },
    "71": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5F9"
    },
    "75": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEA98A950"
    },
    "82": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x621"
    },
    "86": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69B"
    },
    "97": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF3EAF005"
    },
    "104": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6AE"
    },
    "108": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF8DEDE7C"
    },
    "115": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6D7"
    },
    "119": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB026E6BD"
    },
    "131": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x588"
    },
    "135": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBBB62028"
    },
    "142": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A8"
    },
    "146": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBFEECC51"
    },
    "153": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BB"
    },
    "157": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDCFD51C3"
    },
    "164": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CE"
    },
    "168": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "172": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DDEFA36"
    },
    "180": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "GT",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DDEFA36"
    },
    "191": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F0"
    },
    "195": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9F42CE02"
    },
    "202": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x503"
    },
    "206": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAE422B53"
    },
    "213": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x537"
    },
    "217": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAEB4E4A4"
    },
    "224": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x54A"
    },
    "228": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAF3F5E22"
    },
    "235": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "236": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x575"
    },
    "239": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "243": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "244": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "246": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7EF4C7AD"
    },
    "251": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x485"
    },
    "255": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "256": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "257": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x877DD39D"
    },
    "262": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "263": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B9"
    },
    "266": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "267": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "268": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "273": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "274": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CC"
    },
    "277": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "279": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DC3306F"
    },
    "284": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "285": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DD"
    },
    "288": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "289": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "292": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "293": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "294": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "295": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x512A53BC"
    },
    "300": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "GT",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "305": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "306": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6C59EB3B"
    },
    "311": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "GT",
      "path": "6"
    },
    "312": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "316": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "317": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6C59EB3B"
    },
    "322": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "323": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FB"
    },
    "326": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "327": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "328": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6E9E9790"
    },
    "333": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40E"
    },
    "337": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "338": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "339": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "344": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "345": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x439"
    },
    "348": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "349": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "350": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7924D93F"
    },
    "355": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "356": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x441"
    },
    "359": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "360": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "361": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x79D2FDE4"
    },
    "366": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "367": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "370": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "371": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "374": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "375": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "376": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "377": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x512A53BC"
    },
    "382": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "383": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C4"
    },
    "386": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "387": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "388": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x567D1EBF"
    },
    "393": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "394": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D7"
    },
    "397": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "398": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "399": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5EB186F8"
    },
    "404": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "405": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E0"
    },
    "408": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "409": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "410": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x60AB5852"
    },
    "415": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "416": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F3"
    },
    "419": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "420": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "423": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "424": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "425": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "426": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2CDB786A"
    },
    "431": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "GT",
      "path": "6"
    },
    "432": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EF"
    },
    "435": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "436": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "437": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2CDB786A"
    },
    "442": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "443": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A8"
    },
    "446": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "447": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "448": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2D1AB89C"
    },
    "453": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "454": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32E"
    },
    "457": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "458": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "459": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x44589E6E"
    },
    "464": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "465": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x359"
    },
    "468": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "469": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "470": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x466B3362"
    },
    "475": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "476": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x384"
    },
    "479": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "480": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "481": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4D23D8AF"
    },
    "486": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "487": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x399"
    },
    "490": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "491": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "494": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "495": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "496": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "497": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBD4A267"
    },
    "502": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "503": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x221"
    },
    "506": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "507": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "508": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE32A0E3"
    },
    "513": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "514": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25F"
    },
    "517": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "518": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "519": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x12065FE0"
    },
    "524": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "525": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x282"
    },
    "528": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "529": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "530": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1316263A"
    },
    "535": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "EQ",
      "path": "6"
    },
    "536": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x288"
    },
    "539": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "540": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "541": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "543": {
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "544": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1203,
        12028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "545": {
      "offset": [
        2695,
        2763
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "546": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "549": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22F"
    },
    "552": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "553": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "555": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "558": {
      "fn": null,
      "jump": "i",
      "offset": [
        2695,
        2763
      ],
      "op": "JUMP",
      "path": "6"
    },
    "559": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "560": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "562": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "564": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "565": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "DUP2",
      "path": "6"
    },
    "566": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "567": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "569": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "570": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "DUP4",
      "path": "6"
    },
    "571": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "572": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "574": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "DUP1",
      "path": "6"
    },
    "575": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "DUP5",
      "path": "6"
    },
    "576": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "577": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "578": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "579": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "580": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "581": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "DUP3",
      "path": "6"
    },
    "582": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "583": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "584": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "585": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "586": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "DUP2",
      "path": "6"
    },
    "587": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "JUMP",
      "path": "6"
    },
    "588": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "589": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "591": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "592": {
      "op": "SWAP1"
    },
    "593": {
      "op": "DUP2"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "offset": [
        2695,
        2763
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "599": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "601": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "602": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "DUP1",
      "path": "6"
    },
    "603": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "604": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SUB",
      "path": "6"
    },
    "605": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "606": {
      "fn": null,
      "offset": [
        2695,
        2763
      ],
      "op": "RETURN",
      "path": "6"
    },
    "607": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "608": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x272"
    },
    "611": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "614": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "615": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "617": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B1"
    },
    "620": {
      "fn": "Escrow.isBorrowers",
      "jump": "i",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "621": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "622": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6EA"
    },
    "625": {
      "fn": "Escrow.isBorrowers",
      "jump": "i",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "626": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "627": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "629": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "630": {
      "op": "SWAP1"
    },
    "631": {
      "op": "ISZERO"
    },
    "632": {
      "op": "ISZERO"
    },
    "633": {
      "op": "DUP2"
    },
    "634": {
      "op": "MSTORE"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256"
    },
    "641": {
      "op": "JUMP"
    },
    "642": {
      "fn": "Escrow.getBalance",
      "offset": [
        8420,
        8517
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "643": {
      "fn": "Escrow.getBalance",
      "offset": [
        8489,
        8510
      ],
      "op": "SELFBALANCE",
      "path": "6",
      "statement": 0
    },
    "644": {
      "fn": "Escrow.getBalance",
      "offset": [
        8420,
        8517
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "647": {
      "fn": "Escrow.getBalance",
      "offset": [
        8420,
        8517
      ],
      "op": "JUMP",
      "path": "6"
    },
    "648": {
      "offset": [
        2154,
        2203
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "649": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "652": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x296"
    },
    "655": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "656": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "658": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B1"
    },
    "661": {
      "fn": "Escrow.getBalance",
      "jump": "i",
      "offset": [
        2154,
        2203
      ],
      "op": "JUMP",
      "path": "6"
    },
    "662": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "663": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "665": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "667": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "668": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "670": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "671": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "DUP2",
      "path": "6"
    },
    "672": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "673": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "675": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "676": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "677": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "678": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "DUP2",
      "path": "6"
    },
    "679": {
      "fn": "Escrow.getBalance",
      "offset": [
        2154,
        2203
      ],
      "op": "JUMP",
      "path": "6"
    },
    "680": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "681": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x309"
    },
    "684": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "687": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "688": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "690": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "693": {
      "fn": "Escrow.getNftLockData",
      "jump": "i",
      "offset": [
        6905,
        7282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "694": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "701": {
      "op": "SHL"
    },
    "702": {
      "op": "SUB"
    },
    "703": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 1
    },
    "704": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "DUP3",
      "path": "6"
    },
    "705": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "AND",
      "path": "6"
    },
    "706": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7024,
        7031
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "708": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "DUP2",
      "path": "6"
    },
    "709": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "DUP2",
      "path": "6"
    },
    "710": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "711": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7139
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "713": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "715": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "716": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "DUP2",
      "path": "6"
    },
    "717": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "718": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "720": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "DUP1",
      "path": "6"
    },
    "721": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "DUP4",
      "path": "6"
    },
    "722": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7152
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "723": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "DUP6",
      "path": "6"
    },
    "724": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "DUP5",
      "path": "6"
    },
    "725": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "726": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "DUP3",
      "path": "6"
    },
    "727": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "728": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "DUP1",
      "path": "6"
    },
    "729": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "DUP4",
      "path": "6"
    },
    "730": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "731": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "732": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP5",
      "path": "6"
    },
    "733": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP5",
      "path": "6"
    },
    "734": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "735": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7191
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE"
    },
    "737": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP4",
      "path": "6"
    },
    "738": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "739": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP2",
      "path": "6"
    },
    "740": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP5",
      "path": "6"
    },
    "741": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7204
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "742": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "DUP7",
      "path": "6"
    },
    "743": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "DUP6",
      "path": "6"
    },
    "744": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "745": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "DUP4",
      "path": "6"
    },
    "746": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "747": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "DUP2",
      "path": "6"
    },
    "748": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "DUP5",
      "path": "6"
    },
    "749": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "750": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7174,
        7212
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "751": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "752": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "753": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "754": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xD"
    },
    "756": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "DUP4",
      "path": "6"
    },
    "757": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "758": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "DUP2",
      "path": "6"
    },
    "759": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "760": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7257
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "761": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "762": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "DUP5",
      "path": "6"
    },
    "763": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "764": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "765": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "766": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "767": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "768": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "769": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "770": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7226,
        7265
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "771": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "772": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "773": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "774": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "AND",
      "path": "6"
    },
    "775": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        7119,
        7160
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "776": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "777": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "778": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "780": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "781": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "788": {
      "op": "SHL"
    },
    "789": {
      "op": "SUB"
    },
    "790": {
      "op": "SWAP1"
    },
    "791": {
      "op": "SWAP5"
    },
    "792": {
      "op": "AND"
    },
    "793": {
      "op": "DUP5"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "797": {
      "op": "DUP5"
    },
    "798": {
      "op": "ADD"
    },
    "799": {
      "op": "SWAP3"
    },
    "800": {
      "op": "SWAP1"
    },
    "801": {
      "op": "SWAP3"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "SWAP1"
    },
    "804": {
      "op": "DUP3"
    },
    "805": {
      "op": "ADD"
    },
    "806": {
      "op": "MSTORE"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        6905,
        7282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256"
    },
    "813": {
      "op": "JUMP"
    },
    "814": {
      "offset": [
        2377,
        2450
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "815": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "818": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33C"
    },
    "821": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "822": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "824": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "827": {
      "fn": "Escrow.getNftLockData",
      "jump": "i",
      "offset": [
        2377,
        2450
      ],
      "op": "JUMP",
      "path": "6"
    },
    "828": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "829": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xD"
    },
    "831": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "833": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "834": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "DUP2",
      "path": "6"
    },
    "835": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "836": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "838": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "839": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "DUP4",
      "path": "6"
    },
    "840": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "841": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "843": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "DUP1",
      "path": "6"
    },
    "844": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "DUP5",
      "path": "6"
    },
    "845": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "846": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "847": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "848": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "849": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "850": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "DUP3",
      "path": "6"
    },
    "851": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "852": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "853": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "854": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "855": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "DUP2",
      "path": "6"
    },
    "856": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2377,
        2450
      ],
      "op": "JUMP",
      "path": "6"
    },
    "857": {
      "offset": [
        2782,
        2850
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "858": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "861": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x367"
    },
    "864": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "865": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "867": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "870": {
      "fn": "Escrow.getNftLockData",
      "jump": "i",
      "offset": [
        2782,
        2850
      ],
      "op": "JUMP",
      "path": "6"
    },
    "871": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "872": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x11"
    },
    "874": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "876": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "877": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "DUP2",
      "path": "6"
    },
    "878": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "879": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "881": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "882": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "DUP4",
      "path": "6"
    },
    "883": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "884": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "886": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "DUP1",
      "path": "6"
    },
    "887": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "DUP5",
      "path": "6"
    },
    "888": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "889": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "890": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "891": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "892": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "893": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "DUP3",
      "path": "6"
    },
    "894": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "895": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "896": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "897": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "898": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "DUP2",
      "path": "6"
    },
    "899": {
      "fn": "Escrow.getNftLockData",
      "offset": [
        2782,
        2850
      ],
      "op": "JUMP",
      "path": "6"
    },
    "900": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "901": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "904": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x392"
    },
    "907": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "908": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "910": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "913": {
      "fn": "Escrow.loanRepay",
      "jump": "i",
      "offset": [
        3068,
        3347
      ],
      "op": "JUMP",
      "path": "6"
    },
    "914": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "915": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x753"
    },
    "918": {
      "fn": "Escrow.loanRepay",
      "jump": "i",
      "offset": [
        3068,
        3347
      ],
      "op": "JUMP",
      "path": "6"
    },
    "919": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "920": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "STOP",
      "path": "6"
    },
    "921": {
      "offset": [
        1236,
        1264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "922": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AC"
    },
    "925": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A7"
    },
    "928": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "929": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "931": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12CC"
    },
    "934": {
      "fn": "Escrow.loanRepay",
      "jump": "i",
      "offset": [
        1236,
        1264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "935": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "936": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7CF"
    },
    "939": {
      "fn": "Escrow.loanRepay",
      "jump": "i",
      "offset": [
        1236,
        1264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "940": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "941": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "943": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "op": "SUB"
    },
    "952": {
      "op": "SWAP1"
    },
    "953": {
      "op": "SWAP2"
    },
    "954": {
      "op": "AND"
    },
    "955": {
      "op": "DUP2"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "959": {
      "op": "ADD"
    },
    "960": {
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256"
    },
    "963": {
      "op": "JUMP"
    },
    "964": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "965": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "968": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D2"
    },
    "971": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "972": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "974": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12E5"
    },
    "977": {
      "fn": "Escrow.loanTransfer",
      "jump": "i",
      "offset": [
        3353,
        3623
      ],
      "op": "JUMP",
      "path": "6"
    },
    "978": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "979": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "982": {
      "fn": "Escrow.loanTransfer",
      "jump": "i",
      "offset": [
        3353,
        3623
      ],
      "op": "JUMP",
      "path": "6"
    },
    "983": {
      "offset": [
        1702,
        1737
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "984": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1702,
        1737
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "987": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1702,
        1737
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "989": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1702,
        1737
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "990": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1702,
        1737
      ],
      "op": "DUP2",
      "path": "6"
    },
    "991": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1702,
        1737
      ],
      "op": "JUMP",
      "path": "6"
    },
    "992": {
      "offset": [
        1403,
        1426
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "993": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1403,
        1426
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "995": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1403,
        1426
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "996": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1403,
        1426
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AC"
    },
    "999": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1403,
        1426
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "op": "SUB"
    },
    "1008": {
      "offset": [
        1403,
        1426
      ],
      "op": "AND",
      "path": "6"
    },
    "1009": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1403,
        1426
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1010": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1403,
        1426
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1011": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9483,
        9945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1012": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9483,
        9945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "1015": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9483,
        9945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87A"
    },
    "1018": {
      "fn": "Escrow.issueTokens",
      "jump": "i",
      "offset": [
        9483,
        9945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1019": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1020": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "1023": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x409"
    },
    "1026": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1027": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1029": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B1"
    },
    "1032": {
      "fn": "Escrow.addAllowedNfts",
      "jump": "i",
      "offset": [
        7288,
        7396
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1033": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1034": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x955"
    },
    "1037": {
      "fn": "Escrow.addAllowedNfts",
      "jump": "i",
      "offset": [
        7288,
        7396
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1038": {
      "offset": [
        2456,
        2528
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1039": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "1042": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41C"
    },
    "1045": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1046": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1048": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1051": {
      "fn": "Escrow.addAllowedNfts",
      "jump": "i",
      "offset": [
        2456,
        2528
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1052": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1053": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE"
    },
    "1055": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1057": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1058": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1059": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1060": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1062": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1063": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1064": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1065": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1067": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1068": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1069": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1070": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1071": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1072": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1073": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1074": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1075": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1076": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1077": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1078": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1079": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1080": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        2456,
        2528
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1081": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1082": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "1085": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AE"
    },
    "1088": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1089": {
      "offset": [
        2209,
        2235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AC"
    },
    "1093": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44F"
    },
    "1096": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1097": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1099": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12CC"
    },
    "1102": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2209,
        2235
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1103": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1104": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C2"
    },
    "1107": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2209,
        2235
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1108": {
      "offset": [
        2051,
        2148
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1109": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "1112": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x462"
    },
    "1115": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1116": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1118": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12E5"
    },
    "1121": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2051,
        2148
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1122": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1123": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1125": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1127": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1128": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1129": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1132": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1133": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1135": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1137": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1139": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1141": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1142": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1144": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1145": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1146": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1148": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1149": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1150": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1151": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1152": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1153": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1154": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1155": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1156": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2051,
        2148
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1157": {
      "offset": [
        2534,
        2609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1158": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AC"
    },
    "1161": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x493"
    },
    "1164": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1165": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1167": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1170": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2534,
        2609
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1171": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1172": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "1174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1176": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1178": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1181": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1184": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1186": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1187": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1188": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1189": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1191": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1192": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1193": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1195": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1196": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1197": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "op": "SUB"
    },
    "1206": {
      "offset": [
        2534,
        2609
      ],
      "op": "AND",
      "path": "6"
    },
    "1207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1208": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2534,
        2609
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1209": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1210": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "1213": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C7"
    },
    "1216": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1217": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1219": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1321"
    },
    "1222": {
      "fn": "Escrow.setPriceFeedContract",
      "jump": "i",
      "offset": [
        11756,
        12026
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1223": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1224": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D2"
    },
    "1227": {
      "fn": "Escrow.setPriceFeedContract",
      "jump": "i",
      "offset": [
        11756,
        12026
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1228": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1229": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1231": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1241": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AC"
    },
    "1244": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1245": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1246": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "1249": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4EB"
    },
    "1252": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1253": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1255": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12E5"
    },
    "1258": {
      "fn": "Escrow.getUserSingleNftValue",
      "jump": "i",
      "offset": [
        10646,
        11087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1259": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1260": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA08"
    },
    "1263": {
      "fn": "Escrow.getUserSingleNftValue",
      "jump": "i",
      "offset": [
        10646,
        11087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1264": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1265": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x272"
    },
    "1268": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FE"
    },
    "1271": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1272": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1274": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B1"
    },
    "1277": {
      "fn": "Escrow.nftIsAllowed",
      "jump": "i",
      "offset": [
        7402,
        7768
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1278": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1279": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA60"
    },
    "1282": {
      "fn": "Escrow.nftIsAllowed",
      "jump": "i",
      "offset": [
        7402,
        7768
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1283": {
      "offset": [
        1829,
        1900
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1284": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AC"
    },
    "1287": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x511"
    },
    "1290": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1291": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1293": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1296": {
      "fn": "Escrow.nftIsAllowed",
      "jump": "i",
      "offset": [
        1829,
        1900
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1297": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1298": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "1300": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1302": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1303": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1304": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1305": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1307": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1308": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1309": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1310": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1312": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1313": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1314": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1315": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1316": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1317": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1318": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1319": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1320": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1321": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1322": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1323": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "op": "SUB"
    },
    "1332": {
      "offset": [
        1829,
        1900
      ],
      "op": "AND",
      "path": "6"
    },
    "1333": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1334": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        1829,
        1900
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1335": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1336": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "1339": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x545"
    },
    "1342": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1343": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1345": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1354"
    },
    "1348": {
      "fn": "Escrow.nftLock",
      "jump": "i",
      "offset": [
        6447,
        6899
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1349": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1350": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC0"
    },
    "1353": {
      "fn": "Escrow.nftLock",
      "jump": "i",
      "offset": [
        6447,
        6899
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1354": {
      "offset": [
        1906,
        1972
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1355": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "1358": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x558"
    },
    "1361": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1362": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1364": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1367": {
      "fn": "Escrow.nftLock",
      "jump": "i",
      "offset": [
        1906,
        1972
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1368": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1369": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1371": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1373": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1374": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1375": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1376": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1378": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1379": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1380": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1381": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1383": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1384": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1385": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1386": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1387": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1388": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1389": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1390": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1391": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1392": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1393": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1394": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1395": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1396": {
      "fn": "Escrow.nftLock",
      "offset": [
        1906,
        1972
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1397": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1398": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "1401": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x583"
    },
    "1404": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1405": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1407": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B1"
    },
    "1410": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "i",
      "offset": [
        9951,
        10640
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1411": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1412": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB2F"
    },
    "1415": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "i",
      "offset": [
        9951,
        10640
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1416": {
      "offset": [
        2241,
        2289
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1417": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "1420": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x596"
    },
    "1423": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1424": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1426": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B1"
    },
    "1429": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "i",
      "offset": [
        2241,
        2289
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1430": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1431": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "1433": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1435": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1436": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1438": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1439": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1440": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1441": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1443": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1444": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1445": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1446": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1447": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        2241,
        2289
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1448": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1449": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "1452": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B6"
    },
    "1455": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1456": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1458": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1461": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        3629,
        4812
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1462": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1463": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE4"
    },
    "1466": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        3629,
        4812
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1467": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1468": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "1471": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C9"
    },
    "1474": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1475": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1477": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1480": {
      "fn": "Escrow.nftStaking",
      "jump": "i",
      "offset": [
        4818,
        5615
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1481": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1482": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE51"
    },
    "1485": {
      "fn": "Escrow.nftStaking",
      "jump": "i",
      "offset": [
        4818,
        5615
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1486": {
      "offset": [
        2870,
        2940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1487": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "1490": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DC"
    },
    "1493": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1494": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1496": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1499": {
      "fn": "Escrow.nftStaking",
      "jump": "i",
      "offset": [
        2870,
        2940
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1500": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1501": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x12"
    },
    "1503": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1505": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1506": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1507": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1508": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1510": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1511": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1512": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1513": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1515": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1516": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1517": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1518": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1519": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1520": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1521": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1522": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1523": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1524": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1525": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1526": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1527": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1528": {
      "fn": "Escrow.nftStaking",
      "offset": [
        2870,
        2940
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1529": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1530": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60C"
    },
    "1533": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x607"
    },
    "1536": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1537": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1539": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1542": {
      "fn": "Escrow.getNftValue",
      "jump": "i",
      "offset": [
        11093,
        11750
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1543": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1544": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFEE"
    },
    "1547": {
      "fn": "Escrow.getNftValue",
      "jump": "i",
      "offset": [
        11093,
        11750
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1548": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1549": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1551": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1552": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1553": {
      "op": "SWAP3"
    },
    "1554": {
      "op": "DUP4"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1558": {
      "op": "DUP4"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "op": "SWAP2"
    },
    "1561": {
      "op": "SWAP1"
    },
    "1562": {
      "op": "SWAP2"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256"
    },
    "1568": {
      "op": "JUMP"
    },
    "1569": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1570": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x680"
    },
    "1573": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62F"
    },
    "1576": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1577": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1579": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "1582": {
      "fn": "Escrow.getOffers",
      "jump": "i",
      "offset": [
        5996,
        6441
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1583": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "op": "SUB"
    },
    "1592": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1593": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1594": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1595": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "AND",
      "path": "6"
    },
    "1596": {
      "fn": "Escrow.getOffers",
      "offset": [
        6110,
        6117
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1598": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1599": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1600": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1601": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6219
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "1603": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1605": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1606": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1607": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1608": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1610": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1611": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1612": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6232
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1613": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1614": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1615": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1616": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1617": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1618": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1619": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1620": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1621": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1622": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1623": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1624": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1625": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x12"
    },
    "1627": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1628": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1629": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1630": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1631": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6302
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1632": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1633": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1634": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1635": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1636": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1637": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1638": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1639": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1640": {
      "fn": "Escrow.getOffers",
      "offset": [
        6274,
        6310
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1641": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1642": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1643": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1644": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6355
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x11"
    },
    "1646": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1647": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1648": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1649": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1650": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6368
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1651": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1652": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1653": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1654": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1655": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1656": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1657": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1658": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1659": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1660": {
      "fn": "Escrow.getOffers",
      "offset": [
        6342,
        6376
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1661": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1662": {
      "fn": "Escrow.getOffers",
      "offset": [
        6206,
        6240
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1663": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1664": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1665": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1667": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1668": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1669": {
      "op": "SWAP4"
    },
    "1670": {
      "op": "DUP5"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "op": "DUP5"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "SWAP3"
    },
    "1677": {
      "op": "SWAP1"
    },
    "1678": {
      "op": "SWAP3"
    },
    "1679": {
      "op": "MSTORE"
    },
    "1680": {
      "op": "SWAP1"
    },
    "1681": {
      "op": "DUP3"
    },
    "1682": {
      "op": "ADD"
    },
    "1683": {
      "op": "MSTORE"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1686": {
      "op": "ADD"
    },
    "1687": {
      "fn": "Escrow.getOffers",
      "offset": [
        5996,
        6441
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256"
    },
    "1690": {
      "op": "JUMP"
    },
    "1691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1692": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "1695": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A9"
    },
    "1698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1699": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B1"
    },
    "1704": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EF"
    },
    "1709": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1710": {
      "offset": [
        1270,
        1324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AC"
    },
    "1714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6BC"
    },
    "1717": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B1"
    },
    "1723": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1270,
        1324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1724": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1732": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1734": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "offset": [
        1270,
        1324
      ],
      "op": "AND",
      "path": "6"
    },
    "1749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1751": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1752": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "1755": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E5"
    },
    "1758": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1759": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1761": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A2"
    },
    "1764": {
      "fn": "Escrow.setOffers",
      "jump": "i",
      "offset": [
        5621,
        5990
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1765": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1766": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1165"
    },
    "1769": {
      "fn": "Escrow.setOffers",
      "jump": "i",
      "offset": [
        5621,
        5990
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1770": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1771": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7831,
        7835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1773": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7831,
        7835
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1774": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7847,
        8007
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1775": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7879,
        7890
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1777": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7879,
        7897
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1778": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7871,
        7897
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1779": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7871,
        7897
      ],
      "op": "LT",
      "path": "6"
    },
    "1780": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7847,
        8007
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1781": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7847,
        8007
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74A"
    },
    "1784": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7847,
        8007
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1785": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7946,
        7951
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7951
      ],
      "op": "AND",
      "path": "6"
    },
    "1795": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7935
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "1797": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7936,
        7941
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1798": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1799": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1800": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1801": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "LT",
      "path": "6"
    },
    "1802": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x715"
    },
    "1805": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1806": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x715"
    },
    "1809": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E4"
    },
    "1812": {
      "fn": "Escrow.isBorrowers",
      "jump": "i",
      "offset": [
        7926,
        7942
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1813": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1814": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1816": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1817": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1818": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1819": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1821": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1822": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1823": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1824": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "ADD",
      "path": "6"
    },
    "1825": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1832": {
      "op": "SHL"
    },
    "1833": {
      "op": "SUB"
    },
    "1834": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7942
      ],
      "op": "AND",
      "path": "6"
    },
    "1835": {
      "branch": 52,
      "fn": "Escrow.isBorrowers",
      "offset": [
        7926,
        7951
      ],
      "op": "SUB",
      "path": "6"
    },
    "1836": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7922,
        7997
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x738"
    },
    "1839": {
      "branch": 52,
      "fn": "Escrow.isBorrowers",
      "offset": [
        7922,
        7997
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7978,
        7982
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x1"
    },
    "1843": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7978,
        7982
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1844": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "POP"
    },
    "1847": {
      "fn": "Escrow.isBorrowers",
      "jump": "o",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1848": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7922,
        7997
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1849": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 4
    },
    "1850": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x742"
    },
    "1853": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1854": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1410"
    },
    "1857": {
      "fn": "Escrow.isBorrowers",
      "jump": "i",
      "offset": [
        7899,
        7906
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1858": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1859": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1860": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "POP",
      "path": "6"
    },
    "1861": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7899,
        7906
      ],
      "op": "POP",
      "path": "6"
    },
    "1862": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7847,
        8007
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6EE"
    },
    "1865": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7847,
        8007
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1866": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7847,
        8007
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        8023,
        8028
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x0"
    },
    "1870": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        8023,
        8028
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1871": {
      "fn": "Escrow.isBorrowers",
      "offset": [
        7774,
        8035
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "op": "POP"
    },
    "1874": {
      "fn": "Escrow.isBorrowers",
      "jump": "o",
      "offset": [
        7774,
        8035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1875": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1876": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x40"
    },
    "1878": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1879": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1888": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1889": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3267,
        3277
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1890": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1892": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1893": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "ADD",
      "path": "6"
    },
    "1894": {
      "op": "MSTORE"
    },
    "1895": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3299,
        3303
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1898": {
      "op": "DUP3"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "MSTORE"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1903": {
      "op": "DUP2"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "SWAP1"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3253
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1917": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3253
      ],
      "op": "AND",
      "path": "6"
    },
    "1918": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3253
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1919": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3253
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "1924": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3253
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1927": {
      "op": "ADD"
    },
    "1928": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1930": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1932": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1933": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1934": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1935": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "SUB",
      "path": "6"
    },
    "1936": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1937": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1939": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1940": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "GAS",
      "path": "6"
    },
    "1941": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "CALL",
      "path": "6"
    },
    "1942": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1943": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1944": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1945": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A6"
    },
    "1948": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1949": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1950": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1952": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1953": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1954": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1955": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1957": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1958": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1959": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "POP",
      "path": "6"
    },
    "1960": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "POP",
      "path": "6"
    },
    "1961": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "POP",
      "path": "6"
    },
    "1962": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "POP",
      "path": "6"
    },
    "1963": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1965": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1966": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1967": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1969": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "NOT",
      "path": "6"
    },
    "1970": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1972": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1973": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "ADD",
      "path": "6"
    },
    "1974": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "AND",
      "path": "6"
    },
    "1975": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1976": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "ADD",
      "path": "6"
    },
    "1977": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1978": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1980": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1981": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "POP",
      "path": "6"
    },
    "1982": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1983": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "ADD",
      "path": "6"
    },
    "1984": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1985": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7CA"
    },
    "1988": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1989": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1990": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1429"
    },
    "1993": {
      "fn": "Escrow.loanRepay",
      "jump": "i",
      "offset": [
        3215,
        3340
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1994": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1995": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3215,
        3340
      ],
      "op": "POP",
      "path": "6"
    },
    "1996": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "POP",
      "path": "6"
    },
    "1997": {
      "fn": "Escrow.loanRepay",
      "offset": [
        3068,
        3347
      ],
      "op": "POP",
      "path": "6"
    },
    "1998": {
      "fn": "Escrow.loanRepay",
      "jump": "o",
      "offset": [
        3068,
        3347
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1999": {
      "offset": [
        1236,
        1264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2000": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2002": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2003": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2004": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2005": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2006": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "LT",
      "path": "6"
    },
    "2007": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7DF"
    },
    "2010": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2011": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2013": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2014": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2015": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2016": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2018": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2019": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2020": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2021": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2023": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2024": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2025": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2026": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "ADD",
      "path": "6"
    },
    "2027": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "op": "SUB"
    },
    "2036": {
      "offset": [
        1236,
        1264
      ],
      "op": "AND",
      "path": "6"
    },
    "2037": {
      "fn": "Escrow.loanRepay",
      "offset": [
        1236,
        1264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "offset": [
        1236,
        1264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2040": {
      "fn": "Escrow.loanRepay",
      "jump": "o",
      "offset": [
        1236,
        1264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2041": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2042": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x801"
    },
    "2045": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "2048": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2049": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2050": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x40"
    },
    "2052": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2053": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2062": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "op": "DUP4"
    },
    "2072": {
      "op": "DUP2"
    },
    "2073": {
      "op": "AND"
    },
    "2074": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2076": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2077": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "ADD",
      "path": "6"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "DUP4"
    },
    "2084": {
      "op": "SWAP1"
    },
    "2085": {
      "op": "MSTORE"
    },
    "2086": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3584
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2087": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3584
      ],
      "op": "AND",
      "path": "6"
    },
    "2088": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2089": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3584
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "2094": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2100": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2102": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2103": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2104": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2105": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "SUB",
      "path": "6"
    },
    "2106": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2107": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2109": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2110": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "GAS",
      "path": "6"
    },
    "2111": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "CALL",
      "path": "6"
    },
    "2112": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2113": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2114": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2115": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x850"
    },
    "2118": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2119": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2120": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2122": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2123": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2124": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2125": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2127": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2128": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2129": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "POP",
      "path": "6"
    },
    "2130": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "POP",
      "path": "6"
    },
    "2131": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "POP",
      "path": "6"
    },
    "2132": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "POP",
      "path": "6"
    },
    "2133": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2135": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2136": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2137": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2139": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "NOT",
      "path": "6"
    },
    "2140": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2142": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2143": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "ADD",
      "path": "6"
    },
    "2144": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "AND",
      "path": "6"
    },
    "2145": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2146": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "ADD",
      "path": "6"
    },
    "2147": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2148": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2150": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2151": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "POP",
      "path": "6"
    },
    "2152": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2153": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "ADD",
      "path": "6"
    },
    "2154": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2155": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x874"
    },
    "2158": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2159": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2160": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1429"
    },
    "2163": {
      "fn": "Escrow.loanTransfer",
      "jump": "i",
      "offset": [
        3550,
        3616
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2164": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2165": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3550,
        3616
      ],
      "op": "POP",
      "path": "6"
    },
    "2166": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "POP",
      "path": "6"
    },
    "2167": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "POP",
      "path": "6"
    },
    "2168": {
      "fn": "Escrow.loanTransfer",
      "offset": [
        3353,
        3623
      ],
      "op": "POP",
      "path": "6"
    },
    "2169": {
      "fn": "Escrow.loanTransfer",
      "jump": "o",
      "offset": [
        3353,
        3623
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2170": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9483,
        9945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2171": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x882"
    },
    "2174": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "2177": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2178": {
      "fn": "Escrow.issueTokens",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2179": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9698,
        9711
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2181": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2182": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9725,
        9734
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "2184": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9725,
        9741
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2185": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9717,
        9741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2186": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9717,
        9741
      ],
      "op": "LT",
      "path": "6"
    },
    "2187": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2188": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x952"
    },
    "2191": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2192": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9766,
        9783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2194": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "2196": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9796,
        9801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2197": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2198": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2199": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2200": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "LT",
      "path": "6"
    },
    "2201": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A4"
    },
    "2204": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2205": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A4"
    },
    "2208": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E4"
    },
    "2211": {
      "fn": "Escrow.issueTokens",
      "jump": "i",
      "offset": [
        9786,
        9802
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2212": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2213": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2215": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2216": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2217": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2218": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2220": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2221": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2222": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "ADD",
      "path": "6"
    },
    "2223": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2230": {
      "op": "SHL"
    },
    "2231": {
      "op": "SUB"
    },
    "2232": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "AND",
      "path": "6"
    },
    "2233": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2234": {
      "op": "POP"
    },
    "2235": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9841,
        9869
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C3"
    },
    "2238": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9786,
        9802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2239": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9841,
        9858
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB2F"
    },
    "2242": {
      "fn": "Escrow.issueTokens",
      "jump": "i",
      "offset": [
        9841,
        9869
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2243": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9841,
        9869
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2244": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9892
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x5"
    },
    "2246": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9892
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2247": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2249": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2250": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2257": {
      "op": "SHL"
    },
    "2258": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2259": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "op": "DUP6"
    },
    "2269": {
      "op": "DUP2"
    },
    "2270": {
      "op": "AND"
    },
    "2271": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2273": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2274": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "ADD",
      "path": "6"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2278": {
      "op": "DUP3"
    },
    "2279": {
      "op": "ADD"
    },
    "2280": {
      "op": "DUP5"
    },
    "2281": {
      "op": "SWAP1"
    },
    "2282": {
      "op": "MSTORE"
    },
    "2283": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9816,
        9869
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2284": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9816,
        9869
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9892
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2287": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9892
      ],
      "op": "AND",
      "path": "6"
    },
    "2288": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9892
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2289": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9901
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "2294": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9901
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2300": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2302": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2303": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2304": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2305": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "SUB",
      "path": "6"
    },
    "2306": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2307": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2309": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2310": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "GAS",
      "path": "6"
    },
    "2311": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "CALL",
      "path": "6"
    },
    "2312": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2313": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2314": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2315": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x918"
    },
    "2318": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2319": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2320": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2322": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2323": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2324": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2325": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2327": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2328": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2329": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "POP",
      "path": "6"
    },
    "2330": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "POP",
      "path": "6"
    },
    "2331": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "POP",
      "path": "6"
    },
    "2332": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "POP",
      "path": "6"
    },
    "2333": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2335": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2336": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2337": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2339": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "NOT",
      "path": "6"
    },
    "2340": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2342": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2343": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "ADD",
      "path": "6"
    },
    "2344": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "AND",
      "path": "6"
    },
    "2345": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2346": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "ADD",
      "path": "6"
    },
    "2347": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2348": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2350": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2351": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "POP",
      "path": "6"
    },
    "2352": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2353": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "ADD",
      "path": "6"
    },
    "2354": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2355": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93C"
    },
    "2358": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2359": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2360": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1429"
    },
    "2363": {
      "fn": "Escrow.issueTokens",
      "jump": "i",
      "offset": [
        9883,
        9928
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2364": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2365": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9883,
        9928
      ],
      "op": "POP",
      "path": "6"
    },
    "2366": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9752,
        9939
      ],
      "op": "POP",
      "path": "6"
    },
    "2367": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9752,
        9939
      ],
      "op": "POP",
      "path": "6"
    },
    "2368": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 9
    },
    "2369": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2370": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94A"
    },
    "2373": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2374": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1410"
    },
    "2377": {
      "fn": "Escrow.issueTokens",
      "jump": "i",
      "offset": [
        9743,
        9750
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2378": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2379": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2380": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "POP",
      "path": "6"
    },
    "2381": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9743,
        9750
      ],
      "op": "POP",
      "path": "6"
    },
    "2382": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x885"
    },
    "2385": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2386": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2387": {
      "fn": "Escrow.issueTokens",
      "offset": [
        9693,
        9939
      ],
      "op": "POP",
      "path": "6"
    },
    "2388": {
      "fn": "Escrow.issueTokens",
      "jump": "o",
      "offset": [
        9483,
        9945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2389": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7288,
        7396
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2390": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95D"
    },
    "2393": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "2396": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2397": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2398": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7371
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x1"
    },
    "2400": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2401": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2402": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2403": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2404": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "ADD",
      "path": "6"
    },
    "2405": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2406": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2409": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2410": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2411": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2412": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2413": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "2446": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "ADD",
      "path": "6"
    },
    "2447": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2448": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2455": {
      "op": "SHL"
    },
    "2456": {
      "op": "SUB"
    },
    "2457": {
      "op": "NOT"
    },
    "2458": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "AND",
      "path": "6"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "op": "SUB"
    },
    "2467": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2468": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2469": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2470": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "AND",
      "path": "6"
    },
    "2471": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2472": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2473": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2474": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "OR",
      "path": "6"
    },
    "2475": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2476": {
      "fn": "Escrow.addAllowedNfts",
      "offset": [
        7360,
        7389
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2477": {
      "fn": "Escrow.addAllowedNfts",
      "jump": "o",
      "offset": [
        7288,
        7396
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2478": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2479": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B6"
    },
    "2482": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "2485": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2486": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2487": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x9C0"
    },
    "2490": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2492": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121B"
    },
    "2495": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2496": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2497": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2498": {
      "offset": [
        2209,
        2235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2499": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "2501": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2502": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2503": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2504": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2505": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "LT",
      "path": "6"
    },
    "2506": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7DF"
    },
    "2509": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2510": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2512": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2513": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2209,
        2235
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2514": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11756,
        12026
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2515": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "2518": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "2521": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2522": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2529": {
      "op": "SHL"
    },
    "2530": {
      "op": "SUB"
    },
    "2531": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 12
    },
    "2532": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2533": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "AND",
      "path": "6"
    },
    "2534": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2536": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2537": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2538": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2539": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        11993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2541": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2543": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2544": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2546": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2547": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12006
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2548": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2549": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "op": "SUB"
    },
    "2558": {
      "op": "NOT"
    },
    "2559": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "AND",
      "path": "6"
    },
    "2560": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2561": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2562": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2563": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "AND",
      "path": "6"
    },
    "2564": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "OR",
      "path": "6"
    },
    "2565": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2566": {
      "fn": "Escrow.setPriceFeedContract",
      "offset": [
        11974,
        12019
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2567": {
      "fn": "Escrow.setPriceFeedContract",
      "jump": "o",
      "offset": [
        11756,
        12026
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2568": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2578": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "AND",
      "path": "6"
    },
    "2579": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10780,
        10787
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2581": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2582": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2583": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2584": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10817
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2586": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2588": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2589": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2591": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2592": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2593": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10803,
        10824
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2594": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10799,
        10864
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA2D"
    },
    "2597": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10799,
        10864
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2598": {
      "op": "POP"
    },
    "2599": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10852,
        10853
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x0"
    },
    "2601": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10845,
        10853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA59"
    },
    "2604": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10845,
        10853
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2605": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10799,
        10864
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2606": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10874,
        10887
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2608": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10889,
        10905
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2609": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10909,
        10941
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3A"
    },
    "2612": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10921,
        10932
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2613": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10934,
        10940
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2614": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10909,
        10920
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFEE"
    },
    "2617": {
      "fn": "Escrow.getUserSingleNftValue",
      "jump": "i",
      "offset": [
        10909,
        10941
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2618": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10909,
        10941
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2619": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10873,
        10941
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2620": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10873,
        10941
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2621": {
      "op": "POP"
    },
    "2622": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10873,
        10941
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2623": {
      "op": "POP"
    },
    "2624": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10968,
        10980
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 14,
      "value": "0xA4A"
    },
    "2627": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10873,
        10941
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2628": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10968,
        10970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2630": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10968,
        10980
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1531"
    },
    "2633": {
      "fn": "Escrow.getUserSingleNftValue",
      "jump": "i",
      "offset": [
        10968,
        10980
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2634": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10968,
        10980
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2635": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10959,
        10981
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA54"
    },
    "2638": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10959,
        10981
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2639": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10959,
        10964
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2640": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10959,
        10981
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x153D"
    },
    "2643": {
      "fn": "Escrow.getUserSingleNftValue",
      "jump": "i",
      "offset": [
        10959,
        10981
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2644": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10959,
        10981
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2645": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10951,
        10982
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2646": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10951,
        10982
      ],
      "op": "POP",
      "path": "6"
    },
    "2647": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10951,
        10982
      ],
      "op": "POP",
      "path": "6"
    },
    "2648": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10951,
        10982
      ],
      "op": "POP",
      "path": "6"
    },
    "2649": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2650": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2651": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2652": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "POP",
      "path": "6"
    },
    "2653": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "POP",
      "path": "6"
    },
    "2654": {
      "fn": "Escrow.getUserSingleNftValue",
      "offset": [
        10646,
        11087
      ],
      "op": "POP",
      "path": "6"
    },
    "2655": {
      "fn": "Escrow.getUserSingleNftValue",
      "jump": "o",
      "offset": [
        10646,
        11087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2656": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2657": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7466,
        7470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2659": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7466,
        7470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2660": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7482,
        7740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2661": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7561,
        7572
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2663": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7561,
        7579
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2664": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7542,
        7579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2665": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7542,
        7579
      ],
      "op": "LT",
      "path": "6"
    },
    "2666": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7482,
        7740
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2667": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7482,
        7740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74A"
    },
    "2670": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7482,
        7740
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2671": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7673,
        7684
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "op": "SUB"
    },
    "2680": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7684
      ],
      "op": "AND",
      "path": "6"
    },
    "2681": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2683": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7652,
        7668
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2684": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2685": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2686": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2687": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "LT",
      "path": "6"
    },
    "2688": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8B"
    },
    "2691": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2692": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8B"
    },
    "2695": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E4"
    },
    "2698": {
      "fn": "Escrow.nftIsAllowed",
      "jump": "i",
      "offset": [
        7640,
        7669
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2699": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2700": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2702": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2703": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2704": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2705": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2707": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2708": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2709": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2710": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "ADD",
      "path": "6"
    },
    "2711": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2718": {
      "op": "SHL"
    },
    "2719": {
      "op": "SUB"
    },
    "2720": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7669
      ],
      "op": "AND",
      "path": "6"
    },
    "2721": {
      "branch": 53,
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7640,
        7684
      ],
      "op": "SUB",
      "path": "6"
    },
    "2722": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7636,
        7730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAAE"
    },
    "2725": {
      "branch": 53,
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7636,
        7730
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2726": {
      "op": "POP"
    },
    "2727": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7711,
        7715
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0x1"
    },
    "2729": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7711,
        7715
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2730": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7402,
        7768
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2731": {
      "op": "POP"
    },
    "2732": {
      "op": "POP"
    },
    "2733": {
      "fn": "Escrow.nftIsAllowed",
      "jump": "o",
      "offset": [
        7402,
        7768
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2734": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7636,
        7730
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2735": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 16
    },
    "2736": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB8"
    },
    "2739": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2740": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1410"
    },
    "2743": {
      "fn": "Escrow.nftIsAllowed",
      "jump": "i",
      "offset": [
        7593,
        7611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2744": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2745": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2746": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "POP",
      "path": "6"
    },
    "2747": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7593,
        7611
      ],
      "op": "POP",
      "path": "6"
    },
    "2748": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7482,
        7740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA64"
    },
    "2751": {
      "fn": "Escrow.nftIsAllowed",
      "offset": [
        7482,
        7740
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2752": {
      "fn": "Escrow.nftLock",
      "offset": [
        6447,
        6899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2753": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC8"
    },
    "2756": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "2759": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2760": {
      "fn": "Escrow.nftLock",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "op": "SUB"
    },
    "2769": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "SWAP5",
      "path": "6",
      "statement": 17
    },
    "2770": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2771": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "AND",
      "path": "6"
    },
    "2772": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2774": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2775": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2776": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2777": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF"
    },
    "2779": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2781": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2782": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2783": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2784": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2786": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2787": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2788": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6741
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2789": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2790": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2791": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2792": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2793": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2794": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2795": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2796": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6749
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2797": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2798": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2805": {
      "op": "SHL"
    },
    "2806": {
      "op": "SUB"
    },
    "2807": {
      "op": "NOT"
    },
    "2808": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "AND",
      "path": "6"
    },
    "2809": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2810": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2811": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP10",
      "path": "6"
    },
    "2812": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "AND",
      "path": "6"
    },
    "2813": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2814": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2815": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2816": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "OR",
      "path": "6"
    },
    "2817": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2818": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2819": {
      "fn": "Escrow.nftLock",
      "offset": [
        6708,
        6766
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2820": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 18
    },
    "2821": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2822": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2823": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE"
    },
    "2825": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2826": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2827": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2828": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2829": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6806
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2830": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2831": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2832": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2833": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2834": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2835": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2836": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2837": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6814
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2838": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6828
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2839": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2840": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6828
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2841": {
      "fn": "Escrow.nftLock",
      "offset": [
        6776,
        6828
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2842": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6869
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 19
    },
    "2843": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6869
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2844": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6856
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xD"
    },
    "2846": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6869
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2847": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6869
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2848": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6869
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2849": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6869
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2850": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6869
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2851": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2852": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2853": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2854": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2855": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2856": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2857": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2858": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2859": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2860": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6877
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2861": {
      "fn": "Escrow.nftLock",
      "offset": [
        6838,
        6892
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2862": {
      "fn": "Escrow.nftLock",
      "jump": "o",
      "offset": [
        6447,
        6899
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2863": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "op": "SUB"
    },
    "2872": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2873": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "AND",
      "path": "6"
    },
    "2874": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10014,
        10021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2876": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2877": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2878": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2879": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2881": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2883": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2884": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2886": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2887": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2888": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10134,
        10155
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2889": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10014,
        10021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2890": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10014,
        10021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2891": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10130,
        10195
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB57"
    },
    "2894": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10130,
        10195
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10183,
        10184
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x0"
    },
    "2898": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10183,
        10184
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2899": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "op": "POP"
    },
    "2902": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "o",
      "offset": [
        9951,
        10640
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2903": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10130,
        10195
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2904": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10222,
        10244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2906": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10204,
        10607
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "SUB"
    },
    "2915": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2916": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "AND",
      "path": "6"
    },
    "2917": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2919": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2920": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2921": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2922": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10293
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2924": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2926": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2927": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2929": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2930": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2931": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10279,
        10300
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2932": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10262,
        10300
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2933": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10262,
        10300
      ],
      "op": "LT",
      "path": "6"
    },
    "2934": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10204,
        10607
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2935": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10204,
        10607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBDD"
    },
    "2938": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10204,
        10607
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2945": {
      "op": "SHL"
    },
    "2946": {
      "op": "SUB"
    },
    "2947": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 21
    },
    "2948": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2949": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "AND",
      "path": "6"
    },
    "2950": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2952": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2953": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2954": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2955": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10499
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "2957": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2959": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2960": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2961": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2962": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2964": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2965": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2966": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10506
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2967": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2968": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2969": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2970": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2971": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2972": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2973": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2974": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2975": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2976": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2977": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2978": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2979": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10555
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2981": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2982": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2983": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2984": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2985": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10562
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2986": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2987": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2988": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2989": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2990": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2991": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2992": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2993": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2994": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10544,
        10578
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2995": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10413,
        10596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBBF"
    },
    "2998": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10413,
        10596
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2999": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10456,
        10461
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3000": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10456,
        10461
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3001": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "AND",
      "path": "6"
    },
    "3002": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10483,
        10522
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3003": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10413,
        10434
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA08"
    },
    "3006": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "i",
      "offset": [
        10413,
        10596
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3007": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10413,
        10596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3008": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10384,
        10596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBC9"
    },
    "3011": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10384,
        10596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3012": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10384,
        10394
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3013": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10384,
        10596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155F"
    },
    "3016": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "i",
      "offset": [
        10384,
        10596
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3017": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10384,
        10596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3018": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10355,
        10596
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3019": {
      "op": "POP"
    },
    "3020": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 22
    },
    "3021": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD5"
    },
    "3024": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3025": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1410"
    },
    "3028": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "i",
      "offset": [
        10314,
        10330
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3029": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3030": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3031": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "POP",
      "path": "6"
    },
    "3032": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10314,
        10330
      ],
      "op": "POP",
      "path": "6"
    },
    "3033": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10204,
        10607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB5A"
    },
    "3036": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10204,
        10607
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3037": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10204,
        10607
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        10623,
        10633
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 23
    },
    "3040": {
      "fn": "Escrow.getUserTotalValue",
      "offset": [
        9951,
        10640
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3041": {
      "op": "POP"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "fn": "Escrow.getUserTotalValue",
      "jump": "o",
      "offset": [
        9951,
        10640
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3044": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3045": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEC"
    },
    "3048": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "3051": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3052": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3053": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3877,
        3902
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0xBF5"
    },
    "3056": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3890,
        3901
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3057": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3877,
        3889
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA60"
    },
    "3060": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        3877,
        3902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3061": {
      "branch": 54,
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3877,
        3902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3062": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC1A"
    },
    "3065": {
      "branch": 54,
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3066": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3068": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3077": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3078": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3080": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "ADD",
      "path": "6"
    },
    "3081": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC11"
    },
    "3084": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3085": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1572"
    },
    "3088": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        3856,
        3972
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3089": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3090": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3092": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3093": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3094": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3095": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "SUB",
      "path": "6"
    },
    "3096": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3097": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "3098": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3856,
        3972
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3099": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 25,
      "value": "0x40"
    },
    "3101": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3102": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3109": {
      "op": "SHL"
    },
    "3110": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3111": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3112": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4025,
        4029
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "3113": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3115": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3116": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "ADD",
      "path": "6"
    },
    "3117": {
      "op": "MSTORE"
    },
    "3118": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4032,
        4042
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3121": {
      "op": "DUP3"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "op": "MSTORE"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3126": {
      "op": "DUP2"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "op": "DUP3"
    },
    "3129": {
      "op": "SWAP1"
    },
    "3130": {
      "op": "MSTORE"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "op": "SUB"
    },
    "3139": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4016
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3140": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4016
      ],
      "op": "AND",
      "path": "6"
    },
    "3141": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4016
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3142": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4016
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "3147": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4016
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3150": {
      "op": "ADD"
    },
    "3151": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3153": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3155": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3156": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3157": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3158": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "SUB",
      "path": "6"
    },
    "3159": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3160": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3162": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3163": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3164": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3165": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3166": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3167": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3168": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC68"
    },
    "3171": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3172": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3174": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3175": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3176": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3177": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "POP",
      "path": "6"
    },
    "3178": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "GAS",
      "path": "6"
    },
    "3179": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "CALL",
      "path": "6"
    },
    "3180": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3181": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3182": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3183": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7C"
    },
    "3186": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3187": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3188": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3190": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3191": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3192": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3193": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3195": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3196": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3983,
        4051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "POP"
    },
    "3199": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4092,
        4102
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3200": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4061,
        4074
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3202": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3203": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3204": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3205": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4091
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3207": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3209": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3210": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3211": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3212": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3214": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3215": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3216": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4103
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "op": "SUB"
    },
    "3225": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3226": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3227": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "AND",
      "path": "6"
    },
    "3228": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3229": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3230": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3231": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3232": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3233": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3234": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3235": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4116
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3236": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3237": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3238": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3239": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3240": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3241": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3242": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3243": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3244": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3245": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3246": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3247": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3248": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4172
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "3250": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3251": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3252": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3253": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3254": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4184
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3255": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3257": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3258": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3259": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3260": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3261": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3262": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3263": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3264": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4198,
        4224
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3265": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3266": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3267": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3268": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3269": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3270": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3271": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3272": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3273": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3274": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3275": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "DUP12",
      "path": "6"
    },
    "3276": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "DUP12",
      "path": "6"
    },
    "3277": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3278": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4272
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3280": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3281": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3282": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3283": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "DUP12",
      "path": "6"
    },
    "3284": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4284
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3285": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3286": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "DUP12",
      "path": "6"
    },
    "3287": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3288": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3289": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3290": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3291": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3292": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "DUP12",
      "path": "6"
    },
    "3293": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3294": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4261,
        4312
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3295": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 26
    },
    "3296": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "DUP13",
      "path": "6"
    },
    "3297": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3298": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3299": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3300": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3301": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3302": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "DUP12",
      "path": "6"
    },
    "3303": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4357
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3304": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3305": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3312": {
      "op": "SHL"
    },
    "3313": {
      "op": "SUB"
    },
    "3314": {
      "op": "NOT"
    },
    "3315": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "AND",
      "path": "6"
    },
    "3316": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3317": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3318": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "3319": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "AND",
      "path": "6"
    },
    "3320": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3321": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3322": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "OR",
      "path": "6"
    },
    "3323": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3324": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "3325": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4322,
        4371
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3326": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4411
      ],
      "op": "DUP9",
      "path": "6",
      "statement": 27
    },
    "3327": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4411
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3328": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4411
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3329": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4411
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3330": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4411
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3331": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4420
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3332": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4420
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3333": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4381,
        4420
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3334": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 28
    },
    "3335": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3336": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3337": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3338": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3339": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3340": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3341": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3342": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4469
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3343": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3344": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3345": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3346": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3347": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3348": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3349": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3350": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4477
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3351": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4485
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3352": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4485
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3353": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4430,
        4485
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3354": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SWAP7",
      "path": "6",
      "statement": 29
    },
    "3355": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3356": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "3357": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3358": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3359": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3360": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3361": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3362": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3363": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4550
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3364": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3365": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4077,
        4124
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3366": {
      "op": "POP"
    },
    "3367": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4156,
        4234
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4554
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD34"
    },
    "3372": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4554
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "SWAP1"
    },
    "3376": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4554
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15BE"
    },
    "3379": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        4524,
        4554
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3380": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4524,
        4554
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3381": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4510,
        4520
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3382": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3384": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3385": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3386": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3387": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4509
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3389": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3391": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3392": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3394": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3395": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4521
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3396": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4554
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3397": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4554
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3398": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4495,
        4554
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3399": {
      "branch": 55,
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4569,
        4600
      ],
      "op": "SUB",
      "path": "6"
    },
    "3400": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4565,
        4806
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE4A"
    },
    "3403": {
      "branch": 55,
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4565,
        4806
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3404": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4638,
        4648
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 30
    },
    "3405": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3407": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3408": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3409": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3410": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3412": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3414": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3415": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3417": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3418": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3419": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3420": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4691
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 31,
      "value": "0xB"
    },
    "3422": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4692,
        4708
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3423": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4692,
        4708
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3424": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3425": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4624,
        4649
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3428": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4692,
        4712
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD6F"
    },
    "3431": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4692,
        4712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3432": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4711,
        4712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3434": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4711,
        4712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3435": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4692,
        4712
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15BE"
    },
    "3438": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        4692,
        4712
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3439": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4692,
        4712
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3440": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3441": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3442": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3443": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "LT",
      "path": "6"
    },
    "3444": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD7F"
    },
    "3447": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3448": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD7F"
    },
    "3451": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E4"
    },
    "3454": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        4682,
        4713
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3455": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3456": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3458": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3459": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3460": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3461": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3463": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3464": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3465": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3466": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "ADD",
      "path": "6"
    },
    "3467": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3468": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "3470": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3471": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3478": {
      "op": "SHL"
    },
    "3479": {
      "op": "SUB"
    },
    "3480": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3481": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3482": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "AND",
      "path": "6"
    },
    "3483": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4682,
        4713
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3484": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4673,
        4678
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3485": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4673,
        4678
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3486": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3487": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "LT",
      "path": "6"
    },
    "3488": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDAB"
    },
    "3491": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3492": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDAB"
    },
    "3495": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E4"
    },
    "3498": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        4663,
        4679
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3499": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3500": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3501": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3503": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3504": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3506": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3508": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3509": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "ADD",
      "path": "6"
    },
    "3510": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3512": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "3515": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "EXP",
      "path": "6"
    },
    "3516": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3517": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3518": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3525": {
      "op": "SHL"
    },
    "3526": {
      "op": "SUB"
    },
    "3527": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "MUL",
      "path": "6"
    },
    "3528": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "NOT",
      "path": "6"
    },
    "3529": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "AND",
      "path": "6"
    },
    "3530": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3531": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "SUB"
    },
    "3540": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "AND",
      "path": "6"
    },
    "3541": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "MUL",
      "path": "6"
    },
    "3542": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "OR",
      "path": "6"
    },
    "3543": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3544": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3545": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4663,
        4713
      ],
      "op": "POP",
      "path": "6"
    },
    "3546": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4761,
        4766
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 32
    },
    "3547": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3549": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3551": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4750
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "3553": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4751,
        4756
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3554": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3555": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3556": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3557": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "LT",
      "path": "6"
    },
    "3558": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF1"
    },
    "3561": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3562": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF1"
    },
    "3565": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E4"
    },
    "3568": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        4741,
        4757
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3569": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3570": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3572": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3573": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3574": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3575": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3577": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3578": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3579": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3580": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3581": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3582": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "ADD",
      "path": "6"
    },
    "3583": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "SUB"
    },
    "3592": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4741,
        4757
      ],
      "op": "AND",
      "path": "6"
    },
    "3593": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3594": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3595": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3596": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "ADD",
      "path": "6"
    },
    "3597": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3598": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3599": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3600": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3601": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3603": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "ADD",
      "path": "6"
    },
    "3604": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3605": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4758
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3606": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4727,
        4766
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3607": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4789
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 33,
      "value": "0xB"
    },
    "3609": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3610": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3611": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3612": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE27"
    },
    "3615": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3616": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE27"
    },
    "3619": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15D1"
    },
    "3622": {
      "fn": "Escrow.nftUnStaking",
      "jump": "i",
      "offset": [
        4780,
        4795
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3623": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3624": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3626": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3627": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3628": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3629": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3631": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3632": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3633": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3634": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "ADD",
      "path": "6"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3637": {
      "op": "NOT"
    },
    "3638": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3639": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3640": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "ADD",
      "path": "6"
    },
    "3641": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3642": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3649": {
      "op": "SHL"
    },
    "3650": {
      "op": "SUB"
    },
    "3651": {
      "op": "NOT"
    },
    "3652": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "AND",
      "path": "6"
    },
    "3653": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3654": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3655": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "ADD",
      "path": "6"
    },
    "3656": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3657": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4780,
        4795
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3658": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        4565,
        4806
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3659": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3725,
        4812
      ],
      "op": "POP",
      "path": "6"
    },
    "3660": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3725,
        4812
      ],
      "op": "POP",
      "path": "6"
    },
    "3661": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3725,
        4812
      ],
      "op": "POP",
      "path": "6"
    },
    "3662": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "POP",
      "path": "6"
    },
    "3663": {
      "fn": "Escrow.nftUnStaking",
      "offset": [
        3629,
        4812
      ],
      "op": "POP",
      "path": "6"
    },
    "3664": {
      "fn": "Escrow.nftUnStaking",
      "jump": "o",
      "offset": [
        3629,
        4812
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3665": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4818,
        5615
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3666": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4949,
        4974
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 34,
      "value": "0xE5A"
    },
    "3669": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4962,
        4973
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3670": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4949,
        4961
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA60"
    },
    "3673": {
      "fn": "Escrow.nftStaking",
      "jump": "i",
      "offset": [
        4949,
        4974
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3674": {
      "branch": 56,
      "fn": "Escrow.nftStaking",
      "offset": [
        4949,
        4974
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3675": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE76"
    },
    "3678": {
      "branch": 56,
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3679": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3681": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3688": {
      "op": "SHL"
    },
    "3689": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3690": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3691": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3693": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "ADD",
      "path": "6"
    },
    "3694": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC11"
    },
    "3697": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3698": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1572"
    },
    "3701": {
      "fn": "Escrow.nftStaking",
      "jump": "i",
      "offset": [
        4928,
        5044
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3702": {
      "fn": "Escrow.nftStaking",
      "offset": [
        4928,
        5044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3703": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x40"
    },
    "3705": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3706": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3715": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3716": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5088,
        5098
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3717": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3719": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3720": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "ADD",
      "path": "6"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5108,
        5112
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3725": {
      "op": "DUP3"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "MSTORE"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3730": {
      "op": "DUP2"
    },
    "3731": {
      "op": "ADD"
    },
    "3732": {
      "op": "DUP3"
    },
    "3733": {
      "op": "SWAP1"
    },
    "3734": {
      "op": "MSTORE"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3741": {
      "op": "SHL"
    },
    "3742": {
      "op": "SUB"
    },
    "3743": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3744": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5087
      ],
      "op": "AND",
      "path": "6"
    },
    "3745": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3746": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5087
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "3751": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3754": {
      "op": "ADD"
    },
    "3755": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3757": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3759": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3760": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3761": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3762": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "SUB",
      "path": "6"
    },
    "3763": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3764": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3766": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3767": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3768": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3769": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3770": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3771": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3772": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC4"
    },
    "3775": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3776": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3778": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3779": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3780": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3781": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "POP",
      "path": "6"
    },
    "3782": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "GAS",
      "path": "6"
    },
    "3783": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "CALL",
      "path": "6"
    },
    "3784": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3785": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3786": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3787": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED8"
    },
    "3790": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3791": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3792": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3794": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3795": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3796": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3797": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3799": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3800": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5054,
        5122
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5149,
        5159
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 36
    },
    "3804": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3806": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3807": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3808": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3809": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "3811": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3813": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3814": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3815": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3816": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3818": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3819": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3820": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5160
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3821": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5175
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3823": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3824": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3825": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3826": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3827": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3828": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3829": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3830": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5161,
        5187
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3831": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3832": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3833": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3834": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3835": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3836": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3837": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3838": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5188
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3839": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3840": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3847": {
      "op": "SHL"
    },
    "3848": {
      "op": "SUB"
    },
    "3849": {
      "op": "NOT"
    },
    "3850": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "AND",
      "path": "6"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3857": {
      "op": "SHL"
    },
    "3858": {
      "op": "SUB"
    },
    "3859": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "DUP13",
      "path": "6"
    },
    "3860": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "AND",
      "path": "6"
    },
    "3861": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3862": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3863": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "OR",
      "path": "6"
    },
    "3864": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3865": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3866": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5132,
        5202
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3867": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 37
    },
    "3868": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3869": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3870": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3872": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3873": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3874": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3875": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3876": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5235
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3877": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3878": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5236,
        5262
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3879": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5263
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3880": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5263
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3881": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5263
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3882": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5263
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3883": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5263
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3884": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5263
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3885": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5263
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3886": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5272
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3887": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5272
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3888": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5212,
        5272
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3889": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5332,
        5380
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 38
    },
    "3890": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5332,
        5380
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3891": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5332,
        5380
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3892": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5332,
        5380
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3893": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5332,
        5380
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3894": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5296
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3896": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5308
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3897": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5308
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3898": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5308
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3899": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5308
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3900": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5308
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3901": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3902": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3903": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3904": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3905": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3906": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3907": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3908": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3909": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5321
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3910": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3911": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3912": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3913": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3914": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3915": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3916": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3917": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5329
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3918": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5380
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3919": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5380
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3920": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5282,
        5380
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3921": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5394,
        5420
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3922": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5394,
        5420
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3923": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5394,
        5420
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3924": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5394,
        5420
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3925": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5394,
        5420
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3926": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5394,
        5425
      ],
      "op": "SUB",
      "path": "6"
    },
    "3927": {
      "branch": 57,
      "fn": "Escrow.nftStaking",
      "offset": [
        5394,
        5425
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3928": {
      "op": "POP"
    },
    "3929": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5390,
        5540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFBF"
    },
    "3932": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5390,
        5540
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3933": {
      "op": "POP"
    },
    "3934": {
      "branch": 57,
      "fn": "Escrow.nftStaking",
      "offset": [
        5390,
        5540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3935": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5450
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 39,
      "value": "0xB"
    },
    "3937": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3938": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3939": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3941": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3942": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3943": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "ADD",
      "path": "6"
    },
    "3944": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3945": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3948": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3949": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3950": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3951": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
    },
    "3984": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3985": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3986": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "ADD",
      "path": "6"
    },
    "3987": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3988": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3995": {
      "op": "SHL"
    },
    "3996": {
      "op": "SUB"
    },
    "3997": {
      "op": "NOT"
    },
    "3998": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "AND",
      "path": "6"
    },
    "3999": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5456,
        5466
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4000": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "OR",
      "path": "6"
    },
    "4001": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4002": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4003": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5509,
        5525
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 40
    },
    "4004": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5509,
        5525
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4005": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5509,
        5529
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFAE"
    },
    "4008": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5509,
        5529
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4009": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5441,
        5467
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4010": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5509,
        5529
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15BE"
    },
    "4013": {
      "fn": "Escrow.nftStaking",
      "jump": "i",
      "offset": [
        5509,
        5529
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4014": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5509,
        5529
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4015": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5495,
        5505
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4016": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4018": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4019": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4020": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4021": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "4023": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4025": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4026": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4028": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4029": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5506
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4030": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5481,
        5529
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4031": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5390,
        5540
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4032": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5593,
        5603
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 41
    },
    "4033": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4035": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4036": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4037": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4038": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4040": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4042": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4043": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4045": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4046": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4047": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5604
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4048": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFDA"
    },
    "4051": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5608
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4052": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5607,
        5608
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4054": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155F"
    },
    "4057": {
      "fn": "Escrow.nftStaking",
      "jump": "i",
      "offset": [
        5578,
        5608
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4058": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5578,
        5608
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4059": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5564,
        5574
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4060": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4062": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4063": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4064": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4065": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4067": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4069": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4070": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4072": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4073": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5575
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4074": {
      "fn": "Escrow.nftStaking",
      "offset": [
        5549,
        5608
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "op": "POP"
    },
    "4077": {
      "fn": "Escrow.nftStaking",
      "jump": "o",
      "offset": [
        4818,
        5615
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4078": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4085": {
      "op": "SHL"
    },
    "4086": {
      "op": "SUB"
    },
    "4087": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4088": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4089": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "AND",
      "path": "6"
    },
    "4090": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11196,
        11203
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4092": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4093": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4094": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4095": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11462
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "4097": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4099": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4100": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4102": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4103": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4104": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4105": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4106": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4107": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4108": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4115": {
      "op": "SHL"
    },
    "4116": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4117": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4118": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4119": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4120": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4121": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4122": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11196,
        11203
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4123": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4124": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4125": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "AND",
      "path": "6"
    },
    "4126": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4127": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4128": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4129": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11196,
        11203
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4130": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11196,
        11203
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4131": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4132": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4133": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11640
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFEAF968C"
    },
    "4138": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11640
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4139": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4141": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4142": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4143": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "ADD",
      "path": "6"
    },
    "4144": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4145": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "4147": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4148": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4149": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4150": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4151": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4152": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4153": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SUB",
      "path": "6"
    },
    "4154": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "ADD",
      "path": "6"
    },
    "4155": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4156": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11443,
        11475
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4157": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "GAS",
      "path": "6"
    },
    "4158": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "4159": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4160": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4161": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4162": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x104F"
    },
    "4165": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4166": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4167": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4169": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4170": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4171": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4172": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4174": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4175": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4176": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4177": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4178": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4179": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4180": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4182": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4183": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4184": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4186": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "NOT",
      "path": "6"
    },
    "4187": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4189": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4190": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "ADD",
      "path": "6"
    },
    "4191": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "AND",
      "path": "6"
    },
    "4192": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4193": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "ADD",
      "path": "6"
    },
    "4194": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4195": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4197": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4198": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4199": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4200": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "ADD",
      "path": "6"
    },
    "4201": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4202": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1073"
    },
    "4205": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4206": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4207": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1601"
    },
    "4210": {
      "fn": "Escrow.getNftValue",
      "jump": "i",
      "offset": [
        11615,
        11642
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4211": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11615,
        11642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4212": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11590,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4213": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11590,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4214": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11590,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4215": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11590,
        11642
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4216": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11590,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4217": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11590,
        11642
      ],
      "op": "POP",
      "path": "6"
    },
    "4218": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11652,
        11668
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4220": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11688
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4227": {
      "op": "SHL"
    },
    "4228": {
      "op": "SUB"
    },
    "4229": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11697
      ],
      "op": "AND",
      "path": "6"
    },
    "4230": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11697
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "4235": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4237": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4238": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4239": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "4244": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "AND",
      "path": "6"
    },
    "4245": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "4247": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "SHL",
      "path": "6"
    },
    "4248": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4249": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4250": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4252": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "ADD",
      "path": "6"
    },
    "4253": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4255": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4257": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4258": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4259": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4260": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "SUB",
      "path": "6"
    },
    "4261": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4262": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4263": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "GAS",
      "path": "6"
    },
    "4264": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "4265": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4266": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4267": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4268": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B9"
    },
    "4271": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4272": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4273": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4275": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4276": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4277": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4278": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4280": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4281": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4282": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "POP",
      "path": "6"
    },
    "4283": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "POP",
      "path": "6"
    },
    "4284": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "POP",
      "path": "6"
    },
    "4285": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "POP",
      "path": "6"
    },
    "4286": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4288": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4289": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4290": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4292": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "NOT",
      "path": "6"
    },
    "4293": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4295": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4296": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "ADD",
      "path": "6"
    },
    "4297": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "AND",
      "path": "6"
    },
    "4298": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4299": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "ADD",
      "path": "6"
    },
    "4300": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4301": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4303": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4304": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "POP",
      "path": "6"
    },
    "4305": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4306": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "ADD",
      "path": "6"
    },
    "4307": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4308": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10DD"
    },
    "4311": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4312": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4313": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1651"
    },
    "4316": {
      "fn": "Escrow.getNftValue",
      "jump": "i",
      "offset": [
        11679,
        11699
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4317": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11679,
        11699
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4318": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11726,
        11731
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 42
    },
    "4319": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11726,
        11731
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11671,
        11700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4324": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11671,
        11700
      ],
      "op": "AND",
      "path": "6"
    },
    "4325": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11671,
        11700
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "op": "POP"
    },
    "4328": {
      "op": "POP"
    },
    "4329": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4330": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "POP",
      "path": "6"
    },
    "4331": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4332": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4333": {
      "fn": "Escrow.getNftValue",
      "offset": [
        11093,
        11750
      ],
      "op": "POP",
      "path": "6"
    },
    "4334": {
      "fn": "Escrow.getNftValue",
      "jump": "o",
      "offset": [
        11093,
        11750
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4336": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F7"
    },
    "4339": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "4342": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4343": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4350": {
      "op": "SHL"
    },
    "4351": {
      "op": "SUB"
    },
    "4352": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 43
    },
    "4353": {
      "branch": 58,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "4354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115C"
    },
    "4357": {
      "branch": 58,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4367": {
      "op": "SHL"
    },
    "4368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4369": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4372": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4374": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "4376": {
      "op": "MSTORE"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "MSTORE"
    },
    "4384": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4419": {
      "op": "DUP3"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "op": "MSTORE"
    },
    "4422": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4431": {
      "op": "SHL"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4434": {
      "op": "DUP3"
    },
    "4435": {
      "op": "ADD"
    },
    "4436": {
      "op": "MSTORE"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4439": {
      "op": "ADD"
    },
    "4440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC11"
    },
    "4443": {
      "op": "JUMP"
    },
    "4444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x952"
    },
    "4448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121B"
    },
    "4452": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4453": {
      "fn": "Escrow.setOffers",
      "offset": [
        5621,
        5990
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4454": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116D"
    },
    "4457": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C1"
    },
    "4460": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4461": {
      "fn": "Escrow.setOffers",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4468": {
      "op": "SHL"
    },
    "4469": {
      "op": "SUB"
    },
    "4470": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 45
    },
    "4471": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "4472": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "AND",
      "path": "6"
    },
    "4473": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4475": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4476": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4477": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4478": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "4480": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4482": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4483": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4484": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4485": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4487": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4488": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4489": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5841
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4490": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4491": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4492": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4493": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4494": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4495": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4496": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4497": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5849
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4498": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5863
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "4499": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5863
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4500": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5863
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "4501": {
      "fn": "Escrow.setOffers",
      "offset": [
        5815,
        5863
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4502": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 46
    },
    "4503": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4504": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4505": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5888
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x12"
    },
    "4507": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4508": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4509": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4510": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4511": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5901
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4512": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4513": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4514": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4515": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4516": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4517": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4518": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4519": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5909
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4520": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5925
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "4521": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5925
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4522": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5925
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "4523": {
      "fn": "Escrow.setOffers",
      "offset": [
        5873,
        5925
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4524": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 47
    },
    "4525": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4526": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4527": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x11"
    },
    "4529": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4530": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4531": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4532": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4533": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5961
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4534": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4535": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4536": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4537": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4538": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4539": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4540": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4541": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4542": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5969
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4543": {
      "fn": "Escrow.setOffers",
      "offset": [
        5935,
        5983
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4544": {
      "fn": "Escrow.setOffers",
      "jump": "o",
      "offset": [
        5621,
        5990
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4545": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4546": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4548": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4555": {
      "op": "SHL"
    },
    "4556": {
      "op": "SUB"
    },
    "4557": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "4558": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 48
    },
    "4559": {
      "branch": 59,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 49
    },
    "4560": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C0"
    },
    "4563": {
      "branch": 59,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4564": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4566": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4573": {
      "op": "SHL"
    },
    "4574": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4575": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4578": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4580": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4581": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "4582": {
      "op": "DUP2"
    },
    "4583": {
      "op": "SWAP1"
    },
    "4584": {
      "op": "MSTORE"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4587": {
      "op": "DUP3"
    },
    "4588": {
      "op": "ADD"
    },
    "4589": {
      "op": "MSTORE"
    },
    "4590": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4625": {
      "op": "DUP3"
    },
    "4626": {
      "op": "ADD"
    },
    "4627": {
      "op": "MSTORE"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4630": {
      "op": "ADD"
    },
    "4631": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC11"
    },
    "4634": {
      "op": "JUMP"
    },
    "4635": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4636": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4638": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4639": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4646": {
      "op": "SHL"
    },
    "4647": {
      "op": "SUB"
    },
    "4648": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 50
    },
    "4649": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4650": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4657": {
      "op": "SHL"
    },
    "4658": {
      "op": "SUB"
    },
    "4659": {
      "op": "NOT"
    },
    "4660": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4661": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "4662": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4663": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "4664": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4665": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x40"
    },
    "4668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4670": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4671": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4672": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "4673": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4674": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4675": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4676": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4709": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4710": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4711": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4712": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "4713": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "4714": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4715": {
      "op": "JUMPDEST"
    },
    "4716": {
      "op": "DUP1"
    },
    "4717": {
      "op": "CALLDATALOAD"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4724": {
      "op": "SHL"
    },
    "4725": {
      "op": "SUB"
    },
    "4726": {
      "op": "DUP2"
    },
    "4727": {
      "op": "AND"
    },
    "4728": {
      "op": "DUP2"
    },
    "4729": {
      "op": "EQ"
    },
    "4730": {
      "op": "PUSH2",
      "value": "0x1282"
    },
    "4733": {
      "op": "JUMPI"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4736": {
      "op": "DUP1"
    },
    "4737": {
      "op": "REVERT"
    },
    "4738": {
      "op": "JUMPDEST"
    },
    "4739": {
      "op": "SWAP2"
    },
    "4740": {
      "op": "SWAP1"
    },
    "4741": {
      "op": "POP"
    },
    "4742": {
      "jump": "o",
      "op": "JUMP"
    },
    "4743": {
      "op": "JUMPDEST"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4746": {
      "op": "DUP1"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4749": {
      "op": "DUP4"
    },
    "4750": {
      "op": "DUP6"
    },
    "4751": {
      "op": "SUB"
    },
    "4752": {
      "op": "SLT"
    },
    "4753": {
      "op": "ISZERO"
    },
    "4754": {
      "op": "PUSH2",
      "value": "0x129A"
    },
    "4757": {
      "op": "JUMPI"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4760": {
      "op": "DUP1"
    },
    "4761": {
      "op": "REVERT"
    },
    "4762": {
      "op": "JUMPDEST"
    },
    "4763": {
      "op": "PUSH2",
      "value": "0x12A3"
    },
    "4766": {
      "op": "DUP4"
    },
    "4767": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4770": {
      "jump": "i",
      "op": "JUMP"
    },
    "4771": {
      "op": "JUMPDEST"
    },
    "4772": {
      "op": "SWAP5"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4775": {
      "op": "SWAP4"
    },
    "4776": {
      "op": "SWAP1"
    },
    "4777": {
      "op": "SWAP4"
    },
    "4778": {
      "op": "ADD"
    },
    "4779": {
      "op": "CALLDATALOAD"
    },
    "4780": {
      "op": "SWAP4"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "op": "POP"
    },
    "4783": {
      "op": "POP"
    },
    "4784": {
      "jump": "o",
      "op": "JUMP"
    },
    "4785": {
      "op": "JUMPDEST"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4790": {
      "op": "DUP3"
    },
    "4791": {
      "op": "DUP5"
    },
    "4792": {
      "op": "SUB"
    },
    "4793": {
      "op": "SLT"
    },
    "4794": {
      "op": "ISZERO"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x12C3"
    },
    "4798": {
      "op": "JUMPI"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4801": {
      "op": "DUP1"
    },
    "4802": {
      "op": "REVERT"
    },
    "4803": {
      "op": "JUMPDEST"
    },
    "4804": {
      "op": "PUSH2",
      "value": "0xA59"
    },
    "4807": {
      "op": "DUP3"
    },
    "4808": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4811": {
      "jump": "i",
      "op": "JUMP"
    },
    "4812": {
      "op": "JUMPDEST"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4817": {
      "op": "DUP3"
    },
    "4818": {
      "op": "DUP5"
    },
    "4819": {
      "op": "SUB"
    },
    "4820": {
      "op": "SLT"
    },
    "4821": {
      "op": "ISZERO"
    },
    "4822": {
      "op": "PUSH2",
      "value": "0x12DE"
    },
    "4825": {
      "op": "JUMPI"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4828": {
      "op": "DUP1"
    },
    "4829": {
      "op": "REVERT"
    },
    "4830": {
      "op": "JUMPDEST"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "op": "CALLDATALOAD"
    },
    "4833": {
      "op": "SWAP2"
    },
    "4834": {
      "op": "SWAP1"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "jump": "o",
      "op": "JUMP"
    },
    "4837": {
      "op": "JUMPDEST"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4840": {
      "op": "DUP1"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4845": {
      "op": "DUP5"
    },
    "4846": {
      "op": "DUP7"
    },
    "4847": {
      "op": "SUB"
    },
    "4848": {
      "op": "SLT"
    },
    "4849": {
      "op": "ISZERO"
    },
    "4850": {
      "op": "PUSH2",
      "value": "0x12FA"
    },
    "4853": {
      "op": "JUMPI"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4856": {
      "op": "DUP1"
    },
    "4857": {
      "op": "REVERT"
    },
    "4858": {
      "op": "JUMPDEST"
    },
    "4859": {
      "op": "PUSH2",
      "value": "0x1303"
    },
    "4862": {
      "op": "DUP5"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4866": {
      "jump": "i",
      "op": "JUMP"
    },
    "4867": {
      "op": "JUMPDEST"
    },
    "4868": {
      "op": "SWAP3"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "op": "PUSH2",
      "value": "0x1311"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4875": {
      "op": "DUP6"
    },
    "4876": {
      "op": "ADD"
    },
    "4877": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4880": {
      "jump": "i",
      "op": "JUMP"
    },
    "4881": {
      "op": "JUMPDEST"
    },
    "4882": {
      "op": "SWAP2"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4886": {
      "op": "DUP5"
    },
    "4887": {
      "op": "ADD"
    },
    "4888": {
      "op": "CALLDATALOAD"
    },
    "4889": {
      "op": "SWAP1"
    },
    "4890": {
      "op": "POP"
    },
    "4891": {
      "op": "SWAP3"
    },
    "4892": {
      "op": "POP"
    },
    "4893": {
      "op": "SWAP3"
    },
    "4894": {
      "op": "POP"
    },
    "4895": {
      "op": "SWAP3"
    },
    "4896": {
      "jump": "o",
      "op": "JUMP"
    },
    "4897": {
      "op": "JUMPDEST"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4900": {
      "op": "DUP1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4903": {
      "op": "DUP4"
    },
    "4904": {
      "op": "DUP6"
    },
    "4905": {
      "op": "SUB"
    },
    "4906": {
      "op": "SLT"
    },
    "4907": {
      "op": "ISZERO"
    },
    "4908": {
      "op": "PUSH2",
      "value": "0x1334"
    },
    "4911": {
      "op": "JUMPI"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4914": {
      "op": "DUP1"
    },
    "4915": {
      "op": "REVERT"
    },
    "4916": {
      "op": "JUMPDEST"
    },
    "4917": {
      "op": "PUSH2",
      "value": "0x133D"
    },
    "4920": {
      "op": "DUP4"
    },
    "4921": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4924": {
      "jump": "i",
      "op": "JUMP"
    },
    "4925": {
      "op": "JUMPDEST"
    },
    "4926": {
      "op": "SWAP2"
    },
    "4927": {
      "op": "POP"
    },
    "4928": {
      "op": "PUSH2",
      "value": "0x134B"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4933": {
      "op": "DUP5"
    },
    "4934": {
      "op": "ADD"
    },
    "4935": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4938": {
      "jump": "i",
      "op": "JUMP"
    },
    "4939": {
      "op": "JUMPDEST"
    },
    "4940": {
      "op": "SWAP1"
    },
    "4941": {
      "op": "POP"
    },
    "4942": {
      "op": "SWAP3"
    },
    "4943": {
      "op": "POP"
    },
    "4944": {
      "op": "SWAP3"
    },
    "4945": {
      "op": "SWAP1"
    },
    "4946": {
      "op": "POP"
    },
    "4947": {
      "jump": "o",
      "op": "JUMP"
    },
    "4948": {
      "op": "JUMPDEST"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4951": {
      "op": "DUP1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4954": {
      "op": "DUP1"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4959": {
      "op": "DUP7"
    },
    "4960": {
      "op": "DUP9"
    },
    "4961": {
      "op": "SUB"
    },
    "4962": {
      "op": "SLT"
    },
    "4963": {
      "op": "ISZERO"
    },
    "4964": {
      "op": "PUSH2",
      "value": "0x136C"
    },
    "4967": {
      "op": "JUMPI"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4970": {
      "op": "DUP1"
    },
    "4971": {
      "op": "REVERT"
    },
    "4972": {
      "op": "JUMPDEST"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x1375"
    },
    "4976": {
      "op": "DUP7"
    },
    "4977": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "4980": {
      "jump": "i",
      "op": "JUMP"
    },
    "4981": {
      "op": "JUMPDEST"
    },
    "4982": {
      "op": "SWAP5"
    },
    "4983": {
      "op": "POP"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4986": {
      "op": "DUP7"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "CALLDATALOAD"
    },
    "4989": {
      "op": "SWAP4"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "op": "PUSH2",
      "value": "0x138A"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4996": {
      "op": "DUP8"
    },
    "4997": {
      "op": "ADD"
    },
    "4998": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "5001": {
      "jump": "i",
      "op": "JUMP"
    },
    "5002": {
      "op": "JUMPDEST"
    },
    "5003": {
      "op": "SWAP5"
    },
    "5004": {
      "op": "SWAP8"
    },
    "5005": {
      "op": "SWAP4"
    },
    "5006": {
      "op": "SWAP7"
    },
    "5007": {
      "op": "POP"
    },
    "5008": {
      "op": "SWAP4"
    },
    "5009": {
      "op": "SWAP5"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5012": {
      "op": "DUP2"
    },
    "5013": {
      "op": "ADD"
    },
    "5014": {
      "op": "CALLDATALOAD"
    },
    "5015": {
      "op": "SWAP5"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5019": {
      "op": "ADD"
    },
    "5020": {
      "op": "CALLDATALOAD"
    },
    "5021": {
      "op": "SWAP3"
    },
    "5022": {
      "op": "SWAP2"
    },
    "5023": {
      "op": "POP"
    },
    "5024": {
      "op": "POP"
    },
    "5025": {
      "jump": "o",
      "op": "JUMP"
    },
    "5026": {
      "op": "JUMPDEST"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5029": {
      "op": "DUP1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5032": {
      "op": "DUP1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5037": {
      "op": "DUP7"
    },
    "5038": {
      "op": "DUP9"
    },
    "5039": {
      "op": "SUB"
    },
    "5040": {
      "op": "SLT"
    },
    "5041": {
      "op": "ISZERO"
    },
    "5042": {
      "op": "PUSH2",
      "value": "0x13BA"
    },
    "5045": {
      "op": "JUMPI"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5048": {
      "op": "DUP1"
    },
    "5049": {
      "op": "REVERT"
    },
    "5050": {
      "op": "JUMPDEST"
    },
    "5051": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "5054": {
      "op": "DUP7"
    },
    "5055": {
      "op": "PUSH2",
      "value": "0x126B"
    },
    "5058": {
      "jump": "i",
      "op": "JUMP"
    },
    "5059": {
      "op": "JUMPDEST"
    },
    "5060": {
      "op": "SWAP8"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5063": {
      "op": "DUP8"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "CALLDATALOAD"
    },
    "5066": {
      "op": "SWAP8"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5070": {
      "op": "DUP8"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "CALLDATALOAD"
    },
    "5073": {
      "op": "SWAP7"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5076": {
      "op": "DUP2"
    },
    "5077": {
      "op": "ADD"
    },
    "5078": {
      "op": "CALLDATALOAD"
    },
    "5079": {
      "op": "SWAP7"
    },
    "5080": {
      "op": "POP"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5083": {
      "op": "ADD"
    },
    "5084": {
      "op": "CALLDATALOAD"
    },
    "5085": {
      "op": "SWAP5"
    },
    "5086": {
      "op": "POP"
    },
    "5087": {
      "op": "SWAP3"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "jump": "o",
      "op": "JUMP"
    },
    "5092": {
      "op": "JUMPDEST"
    },
    "5093": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5100": {
      "op": "SHL"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5103": {
      "op": "MSTORE"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5108": {
      "op": "MSTORE"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5113": {
      "op": "REVERT"
    },
    "5114": {
      "op": "JUMPDEST"
    },
    "5115": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5122": {
      "op": "SHL"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5125": {
      "op": "MSTORE"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5130": {
      "op": "MSTORE"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5135": {
      "op": "REVERT"
    },
    "5136": {
      "op": "JUMPDEST"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5141": {
      "op": "DUP3"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5146": {
      "op": "JUMPI"
    },
    "5147": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5150": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5153": {
      "jump": "i",
      "op": "JUMP"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "POP"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "op": "SWAP1"
    },
    "5160": {
      "jump": "o",
      "op": "JUMP"
    },
    "5161": {
      "op": "JUMPDEST"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5166": {
      "op": "DUP3"
    },
    "5167": {
      "op": "DUP5"
    },
    "5168": {
      "op": "SUB"
    },
    "5169": {
      "op": "SLT"
    },
    "5170": {
      "op": "ISZERO"
    },
    "5171": {
      "op": "PUSH2",
      "value": "0x143B"
    },
    "5174": {
      "op": "JUMPI"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5177": {
      "op": "DUP1"
    },
    "5178": {
      "op": "REVERT"
    },
    "5179": {
      "op": "JUMPDEST"
    },
    "5180": {
      "op": "DUP2"
    },
    "5181": {
      "op": "MLOAD"
    },
    "5182": {
      "op": "DUP1"
    },
    "5183": {
      "op": "ISZERO"
    },
    "5184": {
      "op": "ISZERO"
    },
    "5185": {
      "op": "DUP2"
    },
    "5186": {
      "op": "EQ"
    },
    "5187": {
      "op": "PUSH2",
      "value": "0xA59"
    },
    "5190": {
      "op": "JUMPI"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5193": {
      "op": "DUP1"
    },
    "5194": {
      "op": "REVERT"
    },
    "5195": {
      "op": "JUMPDEST"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5198": {
      "op": "DUP2"
    },
    "5199": {
      "op": "DUP2"
    },
    "5200": {
      "op": "JUMPDEST"
    },
    "5201": {
      "op": "DUP1"
    },
    "5202": {
      "op": "DUP6"
    },
    "5203": {
      "op": "GT"
    },
    "5204": {
      "op": "ISZERO"
    },
    "5205": {
      "op": "PUSH2",
      "value": "0x1486"
    },
    "5208": {
      "op": "JUMPI"
    },
    "5209": {
      "op": "DUP2"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5212": {
      "op": "NOT"
    },
    "5213": {
      "op": "DIV"
    },
    "5214": {
      "op": "DUP3"
    },
    "5215": {
      "op": "GT"
    },
    "5216": {
      "op": "ISZERO"
    },
    "5217": {
      "op": "PUSH2",
      "value": "0x146C"
    },
    "5220": {
      "op": "JUMPI"
    },
    "5221": {
      "op": "PUSH2",
      "value": "0x146C"
    },
    "5224": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5227": {
      "jump": "i",
      "op": "JUMP"
    },
    "5228": {
      "op": "JUMPDEST"
    },
    "5229": {
      "op": "DUP1"
    },
    "5230": {
      "op": "DUP6"
    },
    "5231": {
      "op": "AND"
    },
    "5232": {
      "op": "ISZERO"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x1479"
    },
    "5236": {
      "op": "JUMPI"
    },
    "5237": {
      "op": "SWAP2"
    },
    "5238": {
      "op": "DUP2"
    },
    "5239": {
      "op": "MUL"
    },
    "5240": {
      "op": "SWAP2"
    },
    "5241": {
      "op": "JUMPDEST"
    },
    "5242": {
      "op": "SWAP4"
    },
    "5243": {
      "op": "DUP5"
    },
    "5244": {
      "op": "SHR"
    },
    "5245": {
      "op": "SWAP4"
    },
    "5246": {
      "op": "SWAP1"
    },
    "5247": {
      "op": "DUP1"
    },
    "5248": {
      "op": "MUL"
    },
    "5249": {
      "op": "SWAP1"
    },
    "5250": {
      "op": "PUSH2",
      "value": "0x1450"
    },
    "5253": {
      "op": "JUMP"
    },
    "5254": {
      "op": "JUMPDEST"
    },
    "5255": {
      "op": "POP"
    },
    "5256": {
      "op": "SWAP3"
    },
    "5257": {
      "op": "POP"
    },
    "5258": {
      "op": "SWAP3"
    },
    "5259": {
      "op": "SWAP1"
    },
    "5260": {
      "op": "POP"
    },
    "5261": {
      "jump": "o",
      "op": "JUMP"
    },
    "5262": {
      "op": "JUMPDEST"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5265": {
      "op": "DUP3"
    },
    "5266": {
      "op": "PUSH2",
      "value": "0x149D"
    },
    "5269": {
      "op": "JUMPI"
    },
    "5270": {
      "op": "POP"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5273": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5276": {
      "op": "JUMP"
    },
    "5277": {
      "op": "JUMPDEST"
    },
    "5278": {
      "op": "DUP2"
    },
    "5279": {
      "op": "PUSH2",
      "value": "0x14AA"
    },
    "5282": {
      "op": "JUMPI"
    },
    "5283": {
      "op": "POP"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5286": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5289": {
      "op": "JUMP"
    },
    "5290": {
      "op": "JUMPDEST"
    },
    "5291": {
      "op": "DUP2"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "DUP2"
    },
    "5295": {
      "op": "EQ"
    },
    "5296": {
      "op": "PUSH2",
      "value": "0x14C0"
    },
    "5299": {
      "op": "JUMPI"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5302": {
      "op": "DUP2"
    },
    "5303": {
      "op": "EQ"
    },
    "5304": {
      "op": "PUSH2",
      "value": "0x14CA"
    },
    "5307": {
      "op": "JUMPI"
    },
    "5308": {
      "op": "PUSH2",
      "value": "0x14E6"
    },
    "5311": {
      "op": "JUMP"
    },
    "5312": {
      "op": "JUMPDEST"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5315": {
      "op": "SWAP2"
    },
    "5316": {
      "op": "POP"
    },
    "5317": {
      "op": "POP"
    },
    "5318": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5321": {
      "op": "JUMP"
    },
    "5322": {
      "op": "JUMPDEST"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5325": {
      "op": "DUP5"
    },
    "5326": {
      "op": "GT"
    },
    "5327": {
      "op": "ISZERO"
    },
    "5328": {
      "op": "PUSH2",
      "value": "0x14DB"
    },
    "5331": {
      "op": "JUMPI"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x14DB"
    },
    "5335": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5338": {
      "jump": "i",
      "op": "JUMP"
    },
    "5339": {
      "op": "JUMPDEST"
    },
    "5340": {
      "op": "POP"
    },
    "5341": {
      "op": "POP"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5344": {
      "op": "DUP3"
    },
    "5345": {
      "op": "SHL"
    },
    "5346": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5349": {
      "op": "JUMP"
    },
    "5350": {
      "op": "JUMPDEST"
    },
    "5351": {
      "op": "POP"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5354": {
      "op": "DUP4"
    },
    "5355": {
      "op": "LT"
    },
    "5356": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "5359": {
      "op": "DUP4"
    },
    "5360": {
      "op": "LT"
    },
    "5361": {
      "op": "AND"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "5364": {
      "op": "DUP5"
    },
    "5365": {
      "op": "LT"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5368": {
      "op": "DUP5"
    },
    "5369": {
      "op": "LT"
    },
    "5370": {
      "op": "AND"
    },
    "5371": {
      "op": "OR"
    },
    "5372": {
      "op": "ISZERO"
    },
    "5373": {
      "op": "PUSH2",
      "value": "0x1509"
    },
    "5376": {
      "op": "JUMPI"
    },
    "5377": {
      "op": "POP"
    },
    "5378": {
      "op": "DUP2"
    },
    "5379": {
      "op": "DUP2"
    },
    "5380": {
      "op": "EXP"
    },
    "5381": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5384": {
      "op": "JUMP"
    },
    "5385": {
      "op": "JUMPDEST"
    },
    "5386": {
      "op": "PUSH2",
      "value": "0x1513"
    },
    "5389": {
      "op": "DUP4"
    },
    "5390": {
      "op": "DUP4"
    },
    "5391": {
      "op": "PUSH2",
      "value": "0x144B"
    },
    "5394": {
      "jump": "i",
      "op": "JUMP"
    },
    "5395": {
      "op": "JUMPDEST"
    },
    "5396": {
      "op": "DUP1"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5399": {
      "op": "NOT"
    },
    "5400": {
      "op": "DIV"
    },
    "5401": {
      "op": "DUP3"
    },
    "5402": {
      "op": "GT"
    },
    "5403": {
      "op": "ISZERO"
    },
    "5404": {
      "op": "PUSH2",
      "value": "0x1527"
    },
    "5407": {
      "op": "JUMPI"
    },
    "5408": {
      "op": "PUSH2",
      "value": "0x1527"
    },
    "5411": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5414": {
      "jump": "i",
      "op": "JUMP"
    },
    "5415": {
      "op": "JUMPDEST"
    },
    "5416": {
      "op": "MUL"
    },
    "5417": {
      "op": "SWAP1"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "JUMPDEST"
    },
    "5420": {
      "op": "SWAP3"
    },
    "5421": {
      "op": "SWAP2"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "jump": "o",
      "op": "JUMP"
    },
    "5425": {
      "op": "JUMPDEST"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5428": {
      "op": "PUSH2",
      "value": "0xA59"
    },
    "5431": {
      "op": "DUP4"
    },
    "5432": {
      "op": "DUP4"
    },
    "5433": {
      "op": "PUSH2",
      "value": "0x148E"
    },
    "5436": {
      "jump": "i",
      "op": "JUMP"
    },
    "5437": {
      "op": "JUMPDEST"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5440": {
      "op": "DUP3"
    },
    "5441": {
      "op": "PUSH2",
      "value": "0x155A"
    },
    "5444": {
      "op": "JUMPI"
    },
    "5445": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5452": {
      "op": "SHL"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5460": {
      "op": "MSTORE"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5465": {
      "op": "REVERT"
    },
    "5466": {
      "op": "JUMPDEST"
    },
    "5467": {
      "op": "POP"
    },
    "5468": {
      "op": "DIV"
    },
    "5469": {
      "op": "SWAP1"
    },
    "5470": {
      "jump": "o",
      "op": "JUMP"
    },
    "5471": {
      "op": "JUMPDEST"
    },
    "5472": {
      "op": "DUP1"
    },
    "5473": {
      "op": "DUP3"
    },
    "5474": {
      "op": "ADD"
    },
    "5475": {
      "op": "DUP1"
    },
    "5476": {
      "op": "DUP3"
    },
    "5477": {
      "op": "GT"
    },
    "5478": {
      "op": "ISZERO"
    },
    "5479": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5482": {
      "op": "JUMPI"
    },
    "5483": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5486": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5489": {
      "jump": "i",
      "op": "JUMP"
    },
    "5490": {
      "op": "JUMPDEST"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5493": {
      "op": "DUP1"
    },
    "5494": {
      "op": "DUP3"
    },
    "5495": {
      "op": "MSTORE"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5498": {
      "op": "SWAP1"
    },
    "5499": {
      "op": "DUP3"
    },
    "5500": {
      "op": "ADD"
    },
    "5501": {
      "op": "MSTORE"
    },
    "5502": {
      "op": "PUSH32",
      "value": "0x63757272656E74206E6674206973206E6F7420616C6C6F77656420696E206F75"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5537": {
      "op": "DUP3"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "PUSH12",
      "value": "0x722077686974656C69737421"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5555": {
      "op": "SHL"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5558": {
      "op": "DUP3"
    },
    "5559": {
      "op": "ADD"
    },
    "5560": {
      "op": "MSTORE"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "SWAP1"
    },
    "5565": {
      "jump": "o",
      "op": "JUMP"
    },
    "5566": {
      "op": "JUMPDEST"
    },
    "5567": {
      "op": "DUP2"
    },
    "5568": {
      "op": "DUP2"
    },
    "5569": {
      "op": "SUB"
    },
    "5570": {
      "op": "DUP2"
    },
    "5571": {
      "op": "DUP2"
    },
    "5572": {
      "op": "GT"
    },
    "5573": {
      "op": "ISZERO"
    },
    "5574": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5577": {
      "op": "JUMPI"
    },
    "5578": {
      "op": "PUSH2",
      "value": "0x152B"
    },
    "5581": {
      "op": "PUSH2",
      "value": "0x13FA"
    },
    "5584": {
      "jump": "i",
      "op": "JUMP"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5593": {
      "op": "SHL"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5596": {
      "op": "MSTORE"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5601": {
      "op": "MSTORE"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5606": {
      "op": "REVERT"
    },
    "5607": {
      "op": "JUMPDEST"
    },
    "5608": {
      "op": "DUP1"
    },
    "5609": {
      "op": "MLOAD"
    },
    "5610": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "5621": {
      "op": "DUP2"
    },
    "5622": {
      "op": "AND"
    },
    "5623": {
      "op": "DUP2"
    },
    "5624": {
      "op": "EQ"
    },
    "5625": {
      "op": "PUSH2",
      "value": "0x1282"
    },
    "5628": {
      "op": "JUMPI"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5631": {
      "op": "DUP1"
    },
    "5632": {
      "op": "REVERT"
    },
    "5633": {
      "op": "JUMPDEST"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5636": {
      "op": "DUP1"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5639": {
      "op": "DUP1"
    },
    "5640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5644": {
      "op": "DUP7"
    },
    "5645": {
      "op": "DUP9"
    },
    "5646": {
      "op": "SUB"
    },
    "5647": {
      "op": "SLT"
    },
    "5648": {
      "op": "ISZERO"
    },
    "5649": {
      "op": "PUSH2",
      "value": "0x1619"
    },
    "5652": {
      "op": "JUMPI"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5655": {
      "op": "DUP1"
    },
    "5656": {
      "op": "REVERT"
    },
    "5657": {
      "op": "JUMPDEST"
    },
    "5658": {
      "op": "PUSH2",
      "value": "0x1622"
    },
    "5661": {
      "op": "DUP7"
    },
    "5662": {
      "op": "PUSH2",
      "value": "0x15E7"
    },
    "5665": {
      "jump": "i",
      "op": "JUMP"
    },
    "5666": {
      "op": "JUMPDEST"
    },
    "5667": {
      "op": "SWAP5"
    },
    "5668": {
      "op": "POP"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5671": {
      "op": "DUP7"
    },
    "5672": {
      "op": "ADD"
    },
    "5673": {
      "op": "MLOAD"
    },
    "5674": {
      "op": "SWAP4"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5678": {
      "op": "DUP7"
    },
    "5679": {
      "op": "ADD"
    },
    "5680": {
      "op": "MLOAD"
    },
    "5681": {
      "op": "SWAP3"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5685": {
      "op": "DUP7"
    },
    "5686": {
      "op": "ADD"
    },
    "5687": {
      "op": "MLOAD"
    },
    "5688": {
      "op": "SWAP2"
    },
    "5689": {
      "op": "POP"
    },
    "5690": {
      "op": "PUSH2",
      "value": "0x1645"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5695": {
      "op": "DUP8"
    },
    "5696": {
      "op": "ADD"
    },
    "5697": {
      "op": "PUSH2",
      "value": "0x15E7"
    },
    "5700": {
      "jump": "i",
      "op": "JUMP"
    },
    "5701": {
      "op": "JUMPDEST"
    },
    "5702": {
      "op": "SWAP1"
    },
    "5703": {
      "op": "POP"
    },
    "5704": {
      "op": "SWAP3"
    },
    "5705": {
      "op": "SWAP6"
    },
    "5706": {
      "op": "POP"
    },
    "5707": {
      "op": "SWAP3"
    },
    "5708": {
      "op": "SWAP6"
    },
    "5709": {
      "op": "SWAP1"
    },
    "5710": {
      "op": "SWAP4"
    },
    "5711": {
      "op": "POP"
    },
    "5712": {
      "jump": "o",
      "op": "JUMP"
    },
    "5713": {
      "op": "JUMPDEST"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5718": {
      "op": "DUP3"
    },
    "5719": {
      "op": "DUP5"
    },
    "5720": {
      "op": "SUB"
    },
    "5721": {
      "op": "SLT"
    },
    "5722": {
      "op": "ISZERO"
    },
    "5723": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5726": {
      "op": "JUMPI"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5729": {
      "op": "DUP1"
    },
    "5730": {
      "op": "REVERT"
    },
    "5731": {
      "op": "JUMPDEST"
    },
    "5732": {
      "op": "DUP2"
    },
    "5733": {
      "op": "MLOAD"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5736": {
      "op": "DUP2"
    },
    "5737": {
      "op": "AND"
    },
    "5738": {
      "op": "DUP2"
    },
    "5739": {
      "op": "EQ"
    },
    "5740": {
      "op": "PUSH2",
      "value": "0xA59"
    },
    "5743": {
      "op": "JUMPI"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5746": {
      "op": "DUP1"
    },
    "5747": {
      "op": "REVERT"
    }
  },
  "sha1": "0e015c79376f707e8fb2359b299a20f9bc4a52ab",
  "source": "//SPDX-License-Identifier: MIT\n\n// principles: minimize memory storage, breakdown a complex on-chain action to several short actions\n// Must functions: connectWallet, showLoanableNFT, setBasePrice(real fp deal in 14days), setThreshold(e.g., 60%on base price),\n//                 autoGenOffers(3 offers: amount[100,80,60], period[3,7,14], APR[80,100,120], +some random disturbation),\n//                 manGenOffers(amount, period, APR, ),\n//                 updateOffers(offerIndex, update=0:del/1:update/2)\n//                 acceptOffer(approveTransfer, nftDeposit,loanTransfer)\n// Later functions: getPrice, showOffers, makeOffers, approve,sendOffers\n// Struct: offer{evalAmount, loanPeriod, interest}\n// Global array: arrPeriod[3,7,14], arrAPR, arrLoanRatio\n// randome value: randDeltaAPR,randDeltaLoanRatio\n\n// ? how to get rarity info. then corresponding evalPrice -> metadata\n// ? how to achieve bundle or reduce gas fee\n//\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract Escrow is Ownable {\n    address[] public allowedNfts;\n    mapping(address => address) public nftPriceFeedMapping; // need to upgraded to ranks\n    address lender;\n    address inspector;\n\n    IERC20 public dappToken;\n\n    struct loanOffer {\n        // struct may not be suggested, just use single variables\n        uint256 _loanAmount; //18 decimals in ether(wei)\n        uint256 _loanDays; // in days\n        uint256 _loanInterest; //with decimals 10**4, e.g. 2.83% = 283/(10**4)\n    }\n    uint256 public interestDecimals = 4;\n\n    // mapping borrower address -> borrower stake index -> staked NFT address and ID\n    mapping(address => mapping(uint256 => address)) public stakedNftAddress;\n    mapping(address => mapping(uint256 => uint256)) public stakedNftId;\n    // mapping borrower address -> nft address -> nft ID -> staked index\n    mapping(address => mapping(address => mapping(uint256 => uint256)))\n        public stakedNftIndex;\n    mapping(address => uint256) public numOfNftStaked;\n    address[] public borrowers;\n    mapping(address => uint256) public borrowerIndex;\n    // mapping nft address -> nft id -> { expireTime, repayAmount, holderAddress}\n    mapping(address => mapping(uint256 => uint256)) public nftLoanRepayAmount;\n    mapping(address => mapping(uint256 => uint256)) public nftLoanExpireTime;\n    mapping(address => mapping(uint256 => address)) public nftLoanHolderAddress;\n    // mapping nft address -> nft id -> { loanPeriod, loanAmount, loanInterest}\n    mapping(address => mapping(uint256 => uint256)) public nftLoanAmount; // unit: wei\n    mapping(address => mapping(uint256 => uint256)) public nftLoanPeriod; // unit: days\n    mapping(address => mapping(uint256 => uint256)) public nftLoanInterest; // decimals: 4\n\n    constructor(address _dappTokenAddress) public {\n        dappToken = IERC20(_dappTokenAddress);\n    }\n\n    function loanRepay(address _loanTokenAddress, uint256 _repayAmount) public {\n        // where shall we put approve action, here or in .py?\n        IERC20(_loanTokenAddress).transferFrom(\n            msg.sender,\n            address(this),\n            _repayAmount\n        );\n    }\n\n    function loanTransfer(\n        address _loanTokenAddress,\n        address _nftHolderAddress,\n        uint256 _loanAmount\n    ) public onlyOwner {\n        // is onlyOwner used here correct?\n        IERC20(_loanTokenAddress).transfer(_nftHolderAddress, _loanAmount);\n    }\n\n    function nftUnStaking(address _nftAddress, uint256 _nftId)\n        public\n        onlyOwner\n    {\n        // must satisfy:\n        // 1. time not expire,\n        // 2. repay enough,\n        // 3. the owner is the owner\n        require(\n            nftIsAllowed(_nftAddress),\n            \"current nft is not allowed in our whitelist!\"\n        );\n\n        IERC721(_nftAddress).transferFrom(address(this), msg.sender, _nftId);\n        uint256 index = stakedNftIndex[msg.sender][_nftAddress][_nftId];\n        address nft_address = stakedNftAddress[msg.sender][\n            numOfNftStaked[msg.sender]\n        ];\n        uint256 nft_id = stakedNftId[msg.sender][numOfNftStaked[msg.sender]];\n        stakedNftAddress[msg.sender][index] = nft_address;\n        stakedNftId[msg.sender][index] = nft_id;\n        stakedNftIndex[msg.sender][nft_address][nft_id] = index;\n        numOfNftStaked[msg.sender] = numOfNftStaked[msg.sender] - 1;\n\n        if (numOfNftStaked[msg.sender] == 0) {\n            index = borrowerIndex[msg.sender];\n            borrowers[index] = borrowers[borrowers.length - 1];\n            borrowerIndex[borrowers[index]] = index;\n            borrowers.pop();\n        }\n    }\n\n    function nftStaking(address _nftAddress, uint256 _nftId) public {\n        // what NFT can they stake?\n        require(\n            nftIsAllowed(_nftAddress),\n            \"current nft is not allowed in our whitelist!\"\n        );\n        IERC721(_nftAddress).transferFrom(msg.sender, address(this), _nftId);\n        stakedNftAddress[msg.sender][numOfNftStaked[msg.sender]] = _nftAddress;\n        stakedNftId[msg.sender][numOfNftStaked[msg.sender]] = _nftId;\n        stakedNftIndex[msg.sender][_nftAddress][_nftId] = numOfNftStaked[\n            msg.sender\n        ];\n        if (numOfNftStaked[msg.sender] == 0) {\n            borrowers.push(msg.sender);\n            borrowerIndex[msg.sender] = borrowers.length - 1;\n        }\n        numOfNftStaked[msg.sender] = numOfNftStaked[msg.sender] + 1;\n    }\n\n    function setOffers(\n        address _nftAddress,\n        uint256 _nftId,\n        uint256 _loanAmount,\n        uint256 _loanPeriod,\n        uint256 _loanInterest\n    ) public onlyOwner {\n        nftLoanAmount[_nftAddress][_nftId] = _loanAmount;\n        nftLoanInterest[_nftAddress][_nftId] = _loanInterest;\n        nftLoanPeriod[_nftAddress][_nftId] = _loanPeriod;\n    }\n\n    function getOffers(address _nftAddress, uint256 _nftId)\n        public\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 loan_amount = nftLoanAmount[_nftAddress][_nftId];\n        uint256 loan_interest = nftLoanInterest[_nftAddress][_nftId];\n        uint256 loan_period = nftLoanPeriod[_nftAddress][_nftId];\n        return (loan_amount, loan_period, loan_interest);\n    }\n\n    function nftLock(\n        address _nftAddress,\n        uint256 _nftId,\n        address _holderAddress,\n        uint256 _expireTime,\n        uint256 _repayAmount\n    ) public onlyOwner {\n        // nft lock parameters setting, is the function public ok?\n        nftLoanHolderAddress[_nftAddress][_nftId] = _holderAddress;\n        nftLoanExpireTime[_nftAddress][_nftId] = _expireTime;\n        nftLoanRepayAmount[_nftAddress][_nftId] = _repayAmount;\n    }\n\n    function getNftLockData(address _nftAddress, uint256 _nftId)\n        public\n        view\n        returns (\n            address,\n            uint256,\n            uint256\n        )\n    {\n        return (\n            nftLoanHolderAddress[_nftAddress][_nftId],\n            nftLoanExpireTime[_nftAddress][_nftId],\n            nftLoanRepayAmount[_nftAddress][_nftId]\n        );\n    }\n\n    function addAllowedNfts(address _nftAddress) public onlyOwner {\n        allowedNfts.push(_nftAddress);\n    }\n\n    function nftIsAllowed(address _nftAddress) public view returns (bool) {\n        for (\n            uint256 allowedNftsIndex = 0;\n            allowedNftsIndex < allowedNfts.length;\n            allowedNftsIndex++\n        ) {\n            if (allowedNfts[allowedNftsIndex] == _nftAddress) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function isBorrowers(address _user) public view returns (bool) {\n        for (uint256 index = 0; index < allowedNfts.length; index++) {\n            if (borrowers[index] == _user) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    modifier onlyBorrower() {\n        require(isBorrowers(msg.sender), \"Only borrower can call this method\");\n        _;\n    }\n\n    modifier onlyLender() {\n        require(msg.sender == lender, \"Only lender can call this method\");\n        _;\n    }\n\n    modifier onlyInspector() {\n        require(msg.sender == inspector, \"Only inspector can call this method\");\n        _;\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    // function requestLoan(\n    //     address _loanTokenAddress,\n    //     address _nftAddress,\n    //     uint256 _nftId,\n    //     uint256 _loanAmount,\n    //     uint256 _loanDays,\n    //     uint256 _loanInterest\n    // ) public {\n    //     require(\n    //         nftIsAllowed(_nftAddress),\n    //         \"current nft is not allowed in our whitelist!\"\n    //     );\n    //     nftStaking(_nftAddress, _nftId);\n    //     IERC20(_loanTokenAddress).transfer(address(msg.sender), _loanAmount);\n    //     uint256 initTime = block.timestamp;\n    //     uint256 expireTime = initTime + _loanDays * 24 * 60 * 60;\n    //     uint256 repayAmount = _loanAmount *\n    //         (1 + _loanInterest / (10**interestDecimals));\n    //     nftLock(\n    //         _nftAddress,\n    //         _nftId,\n    //         address(msg.sender),\n    //         expireTime,\n    //         repayAmount\n    //     );\n    // }\n\n    // e.g.: give 1 DappToken per loanToken loan\n    function issueTokens() public onlyOwner {\n        // ? get each borrower total loan interest profit\n        // ? get each NFT (address, id) loaned interest profit\n        // Issue tokens to all stakers\n        for (uint256 index = 0; index < borrowers.length; index++) {\n            address recipient = borrowers[index];\n            uint256 userTotalValue = getUserTotalValue(recipient);\n            dappToken.transfer(recipient, userTotalValue);\n        }\n    }\n\n    function getUserTotalValue(address _user) public view returns (uint256) {\n        uint256 totalValue = 0;\n        // require(numOfNftStaked[_user] > 0, \"No nft staked!\");\n        if (numOfNftStaked[_user] <= 0) {\n            return 0;\n        }\n        for (\n            uint256 nftStakedIndex = 0;\n            nftStakedIndex < numOfNftStaked[_user];\n            nftStakedIndex++\n        ) {\n            totalValue =\n                totalValue +\n                getUserSingleNftValue(\n                    _user,\n                    stakedNftAddress[_user][nftStakedIndex],\n                    stakedNftId[_user][nftStakedIndex]\n                );\n        }\n        return totalValue;\n    }\n\n    function getUserSingleNftValue(\n        address _user,\n        address _nftAddress,\n        uint256 _nftId\n    ) public view returns (uint256) {\n        if (numOfNftStaked[_user] <= 0) {\n            return 0;\n        }\n        (uint256 price, uint256 decimals) = getNftValue(_nftAddress, _nftId);\n        return (price / (10**decimals));\n        // 10000000000000000000 ETH\n        // ETH/USD -> 10000000000\n        // 10 * 100 = 1,000\n    }\n\n    function getNftValue(address _nftAddress, uint256 _nftId)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        // // default setted to 1ETH and 18decimals\n        // return (1, 18);\n\n        // priceFeedAddress\n        // address priceFeedAddress = nftPriceFeedMapping[_nftAddress][_nftId];\n        address priceFeedAddress = nftPriceFeedMapping[_nftAddress];\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    function setPriceFeedContract(\n        address _nftAddress,\n        // uint256 _nftId=none,\n        address _priceFeed\n    ) public onlyOwner {\n        // nftPriceFeedMapping[_nftAddress][_nftId] = _priceFeed;\n        nftPriceFeedMapping[_nftAddress] = _priceFeed;\n    }\n}\n",
  "sourceMap": "1203:10825:6:-:0;;;1736:1;1702:35;;2962:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:3;936:18:0;:32::i;:::-;3018:9:6;:37;;-1:-1:-1;;;;;;3018:37:6;-1:-1:-1;;;;;3018:37:6;;;;;;;;;;1203:10825;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;:::-;1203:10825:6;;;;;;",
  "sourcePath": "contracts/Escrow.sol",
  "type": "contract"
}