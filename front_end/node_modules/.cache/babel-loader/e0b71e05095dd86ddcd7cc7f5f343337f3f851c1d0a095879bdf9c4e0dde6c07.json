{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/demos/nft_loan/front_end/src/components/yourWallet/StakeForm.tsx\",\n  _s = $RefreshSig$();\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StakeForm = _ref => {\n  _s();\n  let {\n    token\n  } = _ref;\n  const {\n    address: tokenAddress,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  const tokenBalance = useTokenBalance(tokenAddress, account);\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      size: \"large\",\n      children: \"Stake!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(StakeForm, \"NqEQKrgyRTaT6/yyWoioelkAkU4=\", false, function () {\n  return [useEthers, useTokenBalance];\n});\n_c = StakeForm;\nvar _c;\n$RefreshReg$(_c, \"StakeForm\");","map":{"version":3,"names":["useEthers","useTokenBalance","formatUnits","Button","StakeForm","token","address","tokenAddress","name","account","tokenBalance","formattedTokenBalance","parseFloat"],"sources":["/Users/apple/Documents/demos/nft_loan/front_end/src/components/yourWallet/StakeForm.tsx"],"sourcesContent":["import { Token } from \"../Main\"\nimport { useEthers, useTokenBalance } from \"@usedapp/core\"\nimport { formatUnits } from \"ethers/lib/utils\"\nimport Button from '@mui/material/Button'\n\nexport interface StakeFormProps {\n    token: Token\n}\n\nexport const StakeForm = ({ token }: StakeFormProps) => {\n    const { address: tokenAddress, name } = token\n    const { account } = useEthers()\n    const tokenBalance = useTokenBalance(tokenAddress, account)\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\n\n    return (\n        <>\n            <Button color=\"primary\" size=\"large\">Stake!!</Button>\n        </>\n    )\n\n\n}"],"mappings":";;AACA,SAASA,SAAS,EAAEC,eAAe,QAAQ,eAAe;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AAAA;AAAA;AAMzC,OAAO,MAAMC,SAAS,GAAG,QAA+B;EAAA;EAAA,IAA9B;IAAEC;EAAsB,CAAC;EAC/C,MAAM;IAAEC,OAAO,EAAEC,YAAY;IAAEC;EAAK,CAAC,GAAGH,KAAK;EAC7C,MAAM;IAAEI;EAAQ,CAAC,GAAGT,SAAS,EAAE;EAC/B,MAAMU,YAAY,GAAGT,eAAe,CAACM,YAAY,EAAEE,OAAO,CAAC;EAC3D,MAAME,qBAA6B,GAAGD,YAAY,GAAGE,UAAU,CAACV,WAAW,CAACQ,YAAY,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;EAElG,oBACI;IAAA,uBACI,QAAC,MAAM;MAAC,KAAK,EAAC,SAAS;MAAC,IAAI,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAiB,iBACtD;AAIX,CAAC;AAAA,GAbYN,SAAS;EAAA,QAEEJ,SAAS,EACRC,eAAe;AAAA;AAAA,KAH3BG,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}