{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEthers } from \"@usedapp/core\";\nimport helperConfig from \"../helper-config.json\";\nexport const Main = () => {\n  _s();\n  // show users operation interface: borrow eth, repay loans\n  // show allowed NFTs from the wallet\n  // get the address of staked NFT, loan token and dapp token\n  // get the loan token balance of the users wallet\n  const {\n    chainId\n  } = useEthers();\n  const networkName = chainId ? helperConfig[chainId] : \"dev\";\n};\n_s(Main, \"+J/r3hHtDuosVBEukE1cTsA/l+8=\", false, function () {\n  return [useEthers];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEthers","helperConfig","Main","chainId","networkName"],"sources":["/Users/apple/Documents/demos/nft_loan/front_end/src/components/Main.tsx"],"sourcesContent":["import { useEthers } from \"@usedapp/core\"\nimport helperConfig from \"../helper-config.json\"\n\nexport const Main = () => {\n    // show users operation interface: borrow eth, repay loans\n    // show allowed NFTs from the wallet\n    // get the address of staked NFT, loan token and dapp token\n    // get the loan token balance of the users wallet\n    const { chainId } = useEthers()\n    const networkName = chainId ? helperConfig[chainId] : \"dev\"\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;EACtB;EACA;EACA;EACA;EACA,MAAM;IAAEC;EAAQ,CAAC,GAAGH,SAAS,EAAE;EAC/B,MAAMI,WAAW,GAAGD,OAAO,GAAGF,YAAY,CAACE,OAAO,CAAC,GAAG,KAAK;AAE/D,CAAC;AAAA,GARYD,IAAI;EAAA,QAKOF,SAAS;AAAA;AAAA,KALpBE,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}