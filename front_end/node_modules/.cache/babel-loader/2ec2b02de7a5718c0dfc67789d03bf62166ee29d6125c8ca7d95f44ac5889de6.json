{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContractFunction, useEthers } from \"@usedapp/core\";\nimport { constants, utils } from \"ethers\";\nimport Escrow from \"../chain-info/contracts/Escrow.json\";\nimport ERC721 from \"../chain-info/contracts/SimpleNFT.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nexport const useStakeTokens = tokenAddress => {\n  _s();\n  // approve: address, abi, chainId,\n  const {\n    chainId\n  } = useEthers();\n  const {\n    abi\n  } = Escrow;\n  const escrowAddress = chainId ? networkMapping[String(chainId)][\"Escrow\"][0] : constants.AddressZero;\n  const escrowInterface = new utils.Interface(abi);\n  const escrowContract = new Contract(escrowAddress, escrowInterface);\n  const erc721ABI = ERC721.abi;\n  const erc721Interface = new utils.Interface(erc721ABI);\n  const erc721Contract = new Contract(tokenAddress, erc721Interface);\n  // stake nfts\n  const {\n    send: approveErc721Send,\n    state: approveErc721State\n  } = useContractFunction(erc721Contract, \"approve\", {\n    transactionName: \"Approve ERC721 transfer\"\n  });\n  const approve = index => {\n    return approveErc721Send(escrowAddress, index);\n  };\n  return {\n    approve,\n    approveErc721State\n  };\n};\n_s(useStakeTokens, \"1s72ihQIeezK60viseNn7O44FtQ=\", false, function () {\n  return [useEthers, useContractFunction];\n});","map":{"version":3,"names":["useContractFunction","useEthers","constants","utils","Escrow","ERC721","networkMapping","Contract","useStakeTokens","tokenAddress","chainId","abi","escrowAddress","String","AddressZero","escrowInterface","Interface","escrowContract","erc721ABI","erc721Interface","erc721Contract","send","approveErc721Send","state","approveErc721State","transactionName","approve","index"],"sources":["/Users/apple/Documents/demos/nft_loan/front_end/src/hooks/useStakeTokens.ts"],"sourcesContent":["import { useContractFunction, useEthers } from \"@usedapp/core\"\nimport { constants, utils } from \"ethers\"\nimport Escrow from \"../chain-info/contracts/Escrow.json\"\nimport ERC721 from \"../chain-info/contracts/SimpleNFT.json\"\nimport networkMapping from \"../chain-info/deployments/map.json\"\nimport { Contract } from \"@ethersproject/contracts\"\nexport const useStakeTokens = (tokenAddress: string) => {\n    // approve: address, abi, chainId,\n    const { chainId } = useEthers()\n    const { abi } = Escrow\n    const escrowAddress = chainId ? networkMapping[String(chainId)][\"Escrow\"][0] : constants.AddressZero\n    const escrowInterface = new utils.Interface(abi)\n    const escrowContract = new Contract(escrowAddress, escrowInterface)\n\n    const erc721ABI = ERC721.abi\n    const erc721Interface = new utils.Interface(erc721ABI)\n    const erc721Contract = new Contract(tokenAddress, erc721Interface)\n    // stake nfts\n    const { send: approveErc721Send, state: approveErc721State } = useContractFunction(erc721Contract, \"approve\", { transactionName: \"Approve ERC721 transfer\" })\n    const approve = (index: string) => {\n        return approveErc721Send(escrowAddress, index)\n    }\n    return { approve, approveErc721State }\n}   "],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,SAAS,QAAQ,eAAe;AAC9D,SAASC,SAAS,EAAEC,KAAK,QAAQ,QAAQ;AACzC,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAO,MAAMC,cAAc,GAAIC,YAAoB,IAAK;EAAA;EACpD;EACA,MAAM;IAAEC;EAAQ,CAAC,GAAGT,SAAS,EAAE;EAC/B,MAAM;IAAEU;EAAI,CAAC,GAAGP,MAAM;EACtB,MAAMQ,aAAa,GAAGF,OAAO,GAAGJ,cAAc,CAACO,MAAM,CAACH,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGR,SAAS,CAACY,WAAW;EACpG,MAAMC,eAAe,GAAG,IAAIZ,KAAK,CAACa,SAAS,CAACL,GAAG,CAAC;EAChD,MAAMM,cAAc,GAAG,IAAIV,QAAQ,CAACK,aAAa,EAAEG,eAAe,CAAC;EAEnE,MAAMG,SAAS,GAAGb,MAAM,CAACM,GAAG;EAC5B,MAAMQ,eAAe,GAAG,IAAIhB,KAAK,CAACa,SAAS,CAACE,SAAS,CAAC;EACtD,MAAME,cAAc,GAAG,IAAIb,QAAQ,CAACE,YAAY,EAAEU,eAAe,CAAC;EAClE;EACA,MAAM;IAAEE,IAAI,EAAEC,iBAAiB;IAAEC,KAAK,EAAEC;EAAmB,CAAC,GAAGxB,mBAAmB,CAACoB,cAAc,EAAE,SAAS,EAAE;IAAEK,eAAe,EAAE;EAA0B,CAAC,CAAC;EAC7J,MAAMC,OAAO,GAAIC,KAAa,IAAK;IAC/B,OAAOL,iBAAiB,CAACV,aAAa,EAAEe,KAAK,CAAC;EAClD,CAAC;EACD,OAAO;IAAED,OAAO;IAAEF;EAAmB,CAAC;AAC1C,CAAC;AAAA,GAjBYhB,cAAc;EAAA,QAEHP,SAAS,EAUkCD,mBAAmB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}